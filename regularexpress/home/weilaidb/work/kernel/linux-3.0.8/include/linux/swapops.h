#define SWP_TYPE_SHIFT(e)	(sizeof(e.val) * 8 - MAX_SWAPFILES_SHIFT)
#define SWP_OFFSET_MASK(e)	((1UL << SWP_TYPE_SHIFT(e)) - 1)
static inline swp_entry_t swp_entry(unsigned long type, pgoff_t offset)
static inline unsigned swp_type(swp_entry_t entry)
static inline pgoff_t swp_offset(swp_entry_t entry)
static inline int is_swap_pte(pte_t pte)
static inline swp_entry_t pte_to_swp_entry(pte_t pte)
static inline pte_t swp_entry_to_pte(swp_entry_t entry)
static inline swp_entry_t make_migration_entry(struct page *page, int write)
static inline int is_migration_entry(swp_entry_t entry)
static inline int is_write_migration_entry(swp_entry_t entry)
static inline struct page *migration_entry_to_page(swp_entry_t entry)
static inline void make_migration_entry_read(swp_entry_t *entry)
extern void migration_entry_wait(struct mm_struct *mm, pmd_t *pmd,
unsigned long address);
#define make_migration_entry(page, write) swp_entry(0, 0)
static inline int is_migration_entry(swp_entry_t swp)
#define migration_entry_to_page(swp) NULL
static inline void make_migration_entry_read(swp_entry_t *entryp)
static inline void migration_entry_wait(struct mm_struct *mm, pmd_t *pmd,
unsigned long address)
static inline int is_write_migration_entry(swp_entry_t entry)
static inline swp_entry_t make_hwpoison_entry(struct page *page)
static inline int is_hwpoison_entry(swp_entry_t entry)
static inline swp_entry_t make_hwpoison_entry(struct page *page)
static inline int is_hwpoison_entry(swp_entry_t swp)
#if defined(CONFIG_MEMORY_FAILURE) || defined(CONFIG_MIGRATION)
static inline int non_swap_entry(swp_entry_t entry)
static inline int non_swap_entry(swp_entry_t entry)
