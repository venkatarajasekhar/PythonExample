#define LINUX_BCMA_DRIVER_PCI_H_
struct pci_dev;
#define BCMA_CORE_PCI_CTL			0x0000
#define  BCMA_CORE_PCI_CTL_RST_OE		0x00000001
#define  BCMA_CORE_PCI_CTL_RST			0x00000002
#define  BCMA_CORE_PCI_CTL_CLK_OE		0x00000004
#define  BCMA_CORE_PCI_CTL_CLK			0x00000008
#define BCMA_CORE_PCI_ARBCTL			0x0010
#define  BCMA_CORE_PCI_ARBCTL_INTERN		0x00000001
#define  BCMA_CORE_PCI_ARBCTL_EXTERN		0x00000002
#define  BCMA_CORE_PCI_ARBCTL_PARKID		0x00000006
#define   BCMA_CORE_PCI_ARBCTL_PARKID_LAST	0x00000000
#define   BCMA_CORE_PCI_ARBCTL_PARKID_4710	0x00000002
#define   BCMA_CORE_PCI_ARBCTL_PARKID_EXT0	0x00000004
#define   BCMA_CORE_PCI_ARBCTL_PARKID_EXT1	0x00000006
#define BCMA_CORE_PCI_ISTAT			0x0020
#define  BCMA_CORE_PCI_ISTAT_INTA		0x00000001
#define  BCMA_CORE_PCI_ISTAT_INTB		0x00000002
#define  BCMA_CORE_PCI_ISTAT_SERR		0x00000004
#define  BCMA_CORE_PCI_ISTAT_PERR		0x00000008
#define  BCMA_CORE_PCI_ISTAT_PME		0x00000010
#define BCMA_CORE_PCI_IMASK			0x0024
#define  BCMA_CORE_PCI_IMASK_INTA		0x00000001
#define  BCMA_CORE_PCI_IMASK_INTB		0x00000002
#define  BCMA_CORE_PCI_IMASK_SERR		0x00000004
#define  BCMA_CORE_PCI_IMASK_PERR		0x00000008
#define  BCMA_CORE_PCI_IMASK_PME		0x00000010
#define BCMA_CORE_PCI_MBOX			0x0028
#define  BCMA_CORE_PCI_MBOX_F0_0		0x00000100
#define  BCMA_CORE_PCI_MBOX_F0_1		0x00000200
#define  BCMA_CORE_PCI_MBOX_F1_0		0x00000400
#define  BCMA_CORE_PCI_MBOX_F1_1		0x00000800
#define  BCMA_CORE_PCI_MBOX_F2_0		0x00001000
#define  BCMA_CORE_PCI_MBOX_F2_1		0x00002000
#define  BCMA_CORE_PCI_MBOX_F3_0		0x00004000
#define  BCMA_CORE_PCI_MBOX_F3_1		0x00008000
#define BCMA_CORE_PCI_BCAST_ADDR		0x0050
#define  BCMA_CORE_PCI_BCAST_ADDR_MASK		0x000000FF
#define BCMA_CORE_PCI_BCAST_DATA		0x0054
#define BCMA_CORE_PCI_GPIO_IN			0x0060
#define BCMA_CORE_PCI_GPIO_OUT			0x0064
#define BCMA_CORE_PCI_GPIO_ENABLE		0x0068
#define BCMA_CORE_PCI_GPIO_CTL			0x006C
#define BCMA_CORE_PCI_SBTOPCI0			0x0100
#define  BCMA_CORE_PCI_SBTOPCI0_MASK		0xFC000000
#define BCMA_CORE_PCI_SBTOPCI1			0x0104
#define  BCMA_CORE_PCI_SBTOPCI1_MASK		0xFC000000
#define BCMA_CORE_PCI_SBTOPCI2			0x0108
#define  BCMA_CORE_PCI_SBTOPCI2_MASK		0xC0000000
#define BCMA_CORE_PCI_PCICFG0			0x0400
#define BCMA_CORE_PCI_PCICFG1			0x0500
#define BCMA_CORE_PCI_PCICFG2			0x0600
#define BCMA_CORE_PCI_PCICFG3			0x0700
#define BCMA_CORE_PCI_SPROM(wordoffset)		(0x0800 + ((wordoffset) * 2))
#define BCMA_CORE_PCI_SBTOPCI_MEM		0x00000000
#define BCMA_CORE_PCI_SBTOPCI_IO		0x00000001
#define BCMA_CORE_PCI_SBTOPCI_CFG0		0x00000002
#define BCMA_CORE_PCI_SBTOPCI_CFG1		0x00000003
#define BCMA_CORE_PCI_SBTOPCI_PREF		0x00000004
#define BCMA_CORE_PCI_SBTOPCI_BURST		0x00000008
#define BCMA_CORE_PCI_SBTOPCI_MRM		0x00000020
#define BCMA_CORE_PCI_SBTOPCI_RC		0x00000030
#define  BCMA_CORE_PCI_SBTOPCI_RC_READ		0x00000000
#define  BCMA_CORE_PCI_SBTOPCI_RC_READL		0x00000010
#define  BCMA_CORE_PCI_SBTOPCI_RC_READM		0x00000020
#define BCMA_CORE_PCI_BFL_NOPCI			0x00000400
struct bcma_drv_pci ;
#define pcicore_read32(pc, offset)		bcma_read32((pc)->core, offset)
#define pcicore_write32(pc, offset, val)	bcma_write32((pc)->core, offset, val)
extern void bcma_core_pci_init(struct bcma_drv_pci *pc);
