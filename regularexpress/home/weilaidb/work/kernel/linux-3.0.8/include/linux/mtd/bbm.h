#define __LINUX_MTD_BBM_H
#define NAND_MAX_CHIPS		8
struct nand_bbt_descr ;
#define NAND_BBT_NRBITS_MSK	0x0000000F
#define NAND_BBT_1BIT		0x00000001
#define NAND_BBT_2BIT		0x00000002
#define NAND_BBT_4BIT		0x00000004
#define NAND_BBT_8BIT		0x00000008
#define NAND_BBT_LASTBLOCK	0x00000010
#define NAND_BBT_ABSPAGE	0x00000020
#define NAND_BBT_SEARCH		0x00000040
#define NAND_BBT_PERCHIP	0x00000080
#define NAND_BBT_VERSION	0x00000100
#define NAND_BBT_CREATE		0x00000200
#define NAND_BBT_SCANALLPAGES	0x00000400
#define NAND_BBT_SCANEMPTY	0x00000800
#define NAND_BBT_WRITE		0x00001000
#define NAND_BBT_SAVECONTENT	0x00002000
#define NAND_BBT_SCAN2NDPAGE	0x00004000
#define NAND_BBT_SCANLASTPAGE	0x00008000
#define NAND_BBT_SCANBYTE1AND6 0x00100000
#define NAND_BBT_DYNAMICSTRUCT 0x00200000
#define NAND_BBT_NO_OOB		0x00400000
#define NAND_BBT_SCAN_MAXBLOCKS	4
#define NAND_SMALL_BADBLOCK_POS		5
#define NAND_LARGE_BADBLOCK_POS		0
#define ONENAND_BADBLOCK_POS		0
#define ONENAND_BBT_READ_ERROR		1
#define ONENAND_BBT_READ_ECC_ERROR	2
#define ONENAND_BBT_READ_FATAL_ERROR	4
struct bbm_info ;
extern int onenand_scan_bbt(struct mtd_info *mtd, struct nand_bbt_descr *bd);
extern int onenand_default_bbt(struct mtd_info *mtd);
