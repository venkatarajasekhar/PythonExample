#define _ASM_GENERIC_ATOMIC_LONG_H
#if BITS_PER_LONG == 64
typedef atomic64_t atomic_long_t;
#define ATOMIC_LONG_INIT(i)	ATOMIC64_INIT(i)
static inline long atomic_long_read(atomic_long_t *l)
static inline void atomic_long_set(atomic_long_t *l, long i)
static inline void atomic_long_inc(atomic_long_t *l)
static inline void atomic_long_dec(atomic_long_t *l)
static inline void atomic_long_add(long i, atomic_long_t *l)
static inline void atomic_long_sub(long i, atomic_long_t *l)
static inline int atomic_long_sub_and_test(long i, atomic_long_t *l)
static inline int atomic_long_dec_and_test(atomic_long_t *l)
static inline int atomic_long_inc_and_test(atomic_long_t *l)
static inline int atomic_long_add_negative(long i, atomic_long_t *l)
static inline long atomic_long_add_return(long i, atomic_long_t *l)
static inline long atomic_long_sub_return(long i, atomic_long_t *l)
static inline long atomic_long_inc_return(atomic_long_t *l)
static inline long atomic_long_dec_return(atomic_long_t *l)
static inline long atomic_long_add_unless(atomic_long_t *l, long a, long u)
#define atomic_long_inc_not_zero(l) atomic64_inc_not_zero((atomic64_t *)(l))
#define atomic_long_cmpxchg(l, old, new) \
(atomic64_cmpxchg((atomic64_t *)(l), (old), (new)))
#define atomic_long_xchg(v, new) \
(atomic64_xchg((atomic64_t *)(v), (new)))
typedef atomic_t atomic_long_t;
#define ATOMIC_LONG_INIT(i)	ATOMIC_INIT(i)
static inline long atomic_long_read(atomic_long_t *l)
static inline void atomic_long_set(atomic_long_t *l, long i)
static inline void atomic_long_inc(atomic_long_t *l)
static inline void atomic_long_dec(atomic_long_t *l)
static inline void atomic_long_add(long i, atomic_long_t *l)
static inline void atomic_long_sub(long i, atomic_long_t *l)
static inline int atomic_long_sub_and_test(long i, atomic_long_t *l)
static inline int atomic_long_dec_and_test(atomic_long_t *l)
static inline int atomic_long_inc_and_test(atomic_long_t *l)
static inline int atomic_long_add_negative(long i, atomic_long_t *l)
static inline long atomic_long_add_return(long i, atomic_long_t *l)
static inline long atomic_long_sub_return(long i, atomic_long_t *l)
static inline long atomic_long_inc_return(atomic_long_t *l)
static inline long atomic_long_dec_return(atomic_long_t *l)
static inline long atomic_long_add_unless(atomic_long_t *l, long a, long u)
#define atomic_long_inc_not_zero(l) atomic_inc_not_zero((atomic_t *)(l))
#define atomic_long_cmpxchg(l, old, new) \
(atomic_cmpxchg((atomic_t *)(l), (old), (new)))
#define atomic_long_xchg(v, new) \
(atomic_xchg((atomic_t *)(v), (new)))
