#define __ARCH_M68K_ATOMIC__
#define ATOMIC_INIT(i)
#define atomic_read(v)		(*(volatile int *)&(v)->counter)
#define atomic_set(v, i)	(((v)->counter) = i)
#define	ASM_DI	"d"
#define	ASM_DI	"di"
static inline void atomic_add(int i, atomic_t *v)
static inline void atomic_sub(int i, atomic_t *v)
static inline void atomic_inc(atomic_t *v)
static inline void atomic_dec(atomic_t *v)
static inline int atomic_dec_and_test(atomic_t *v)
static inline int atomic_inc_and_test(atomic_t *v)
static inline int atomic_add_return(int i, atomic_t *v)
static inline int atomic_sub_return(int i, atomic_t *v)
#define atomic_cmpxchg(v, o, n) ((int)cmpxchg(&((v)->counter), (o), (n)))
#define atomic_xchg(v, new) (xchg(&((v)->counter), new))
static inline int atomic_add_return(int i, atomic_t * v)
static inline int atomic_sub_return(int i, atomic_t * v)
static inline int atomic_cmpxchg(atomic_t *v, int old, int new)
static inline int atomic_xchg(atomic_t *v, int new)
#define atomic_dec_return(v)	atomic_sub_return(1, (v))
#define atomic_inc_return(v)	atomic_add_return(1, (v))
static inline int atomic_sub_and_test(int i, atomic_t *v)
static inline int atomic_add_negative(int i, atomic_t *v)
static inline void atomic_clear_mask(unsigned long mask, unsigned long *v)
static inline void atomic_set_mask(unsigned long mask, unsigned long *v)
static __inline__ int atomic_add_unless(atomic_t *v, int a, int u)
#define atomic_inc_not_zero(v) atomic_add_unless((v), 1, 0)
#define smp_mb__before_atomic_dec()	barrier()
#define smp_mb__after_atomic_dec()	barrier()
#define smp_mb__before_atomic_inc()	barrier()
#define smp_mb__after_atomic_inc()	barrier()
