#define __SPARC64_SPINLOCK_H
#define arch_spin_is_locked(lp)	((lp)->lock != 0)
#define arch_spin_unlock_wait(lp)	\
do  while((lp)->lock)
static inline void arch_spin_lock(arch_spinlock_t *lock)
static inline int arch_spin_trylock(arch_spinlock_t *lock)
static inline void arch_spin_unlock(arch_spinlock_t *lock)
static inline void arch_spin_lock_flags(arch_spinlock_t *lock, unsigned long flags)
static void inline arch_read_lock(arch_rwlock_t *lock)
static int inline arch_read_trylock(arch_rwlock_t *lock)
static void inline arch_read_unlock(arch_rwlock_t *lock)
static void inline arch_write_lock(arch_rwlock_t *lock)
static void inline arch_write_unlock(arch_rwlock_t *lock)
static int inline arch_write_trylock(arch_rwlock_t *lock)
#define arch_read_lock_flags(p, f) arch_read_lock(p)
#define arch_write_lock_flags(p, f) arch_write_lock(p)
#define arch_read_can_lock(rw)		(!((rw)->lock & 0x80000000UL))
#define arch_write_can_lock(rw)	(!(rw)->lock)
#define arch_spin_relax(lock)	cpu_relax()
#define arch_read_relax(lock)	cpu_relax()
#define arch_write_relax(lock)	cpu_relax()
