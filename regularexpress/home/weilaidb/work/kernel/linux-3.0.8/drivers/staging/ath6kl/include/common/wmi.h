#define _WMI_H_
#define HTC_PROTOCOL_VERSION    0x0002
#define HTC_PROTOCOL_REVISION   0x0000
#define WMI_PROTOCOL_VERSION    0x0002
#define WMI_PROTOCOL_REVISION   0x0000
#define ATH_MAC_LEN             6
#define WMI_CMD_MAX_LEN         100
#define WMI_CONTROL_MSG_MAX_LEN     256
#define WMI_OPT_CONTROL_MSG_MAX_LEN 1536
#define IS_ETHERTYPE(_typeOrLen)        ((_typeOrLen) >= 0x0600)
#define RFC1042OUI
#define IP_ETHERTYPE 0x0800
#define WMI_IMPLICIT_PSTREAM 0xFF
#define WMI_MAX_THINSTREAM 15
#define IBSS_MAX_NUM_STA          4
#define IBSS_MAX_NUM_STA          8
PREPACK struct host_app_area_s  POSTPACK;
typedef PREPACK struct  POSTPACK ATH_MAC_HDR;
typedef PREPACK struct  POSTPACK ATH_LLC_SNAP_HDR;
typedef enum  WMI_MSG_TYPE;
#define WMI_DATA_HDR_MSG_TYPE_MASK  0x03
#define WMI_DATA_HDR_MSG_TYPE_SHIFT 0
#define WMI_DATA_HDR_UP_MASK        0x07
#define WMI_DATA_HDR_UP_SHIFT       2
#define WMI_DATA_HDR_PS_MASK        0x1
#define WMI_DATA_HDR_PS_SHIFT       5
#define WMI_DATA_HDR_MORE_MASK      0x1
#define WMI_DATA_HDR_MORE_SHIFT     5
typedef enum  WMI_DATA_HDR_DATA_TYPE;
#define WMI_DATA_HDR_DATA_TYPE_MASK     0x3
#define WMI_DATA_HDR_DATA_TYPE_SHIFT    6
#define WMI_DATA_HDR_SET_MORE_BIT(h) ((h)->info |= (WMI_DATA_HDR_MORE_MASK << WMI_DATA_HDR_MORE_SHIFT))
#define WMI_DATA_HDR_IS_MSG_TYPE(h, t)  (((h)->info & (WMI_DATA_HDR_MSG_TYPE_MASK)) == (t))
#define WMI_DATA_HDR_SET_MSG_TYPE(h, t) (h)->info = (((h)->info & ~(WMI_DATA_HDR_MSG_TYPE_MASK << WMI_DATA_HDR_MSG_TYPE_SHIFT)) | (t << WMI_DATA_HDR_MSG_TYPE_SHIFT))
#define WMI_DATA_HDR_GET_UP(h)    (((h)->info >> WMI_DATA_HDR_UP_SHIFT) & WMI_DATA_HDR_UP_MASK)
#define WMI_DATA_HDR_SET_UP(h, p) (h)->info = (((h)->info & ~(WMI_DATA_HDR_UP_MASK << WMI_DATA_HDR_UP_SHIFT)) | (p << WMI_DATA_HDR_UP_SHIFT))
#define WMI_DATA_HDR_GET_DATA_TYPE(h)   (((h)->info >> WMI_DATA_HDR_DATA_TYPE_SHIFT) & WMI_DATA_HDR_DATA_TYPE_MASK)
#define WMI_DATA_HDR_SET_DATA_TYPE(h, p) (h)->info = (((h)->info & ~(WMI_DATA_HDR_DATA_TYPE_MASK << WMI_DATA_HDR_DATA_TYPE_SHIFT)) | ((p) << WMI_DATA_HDR_DATA_TYPE_SHIFT))
#define WMI_DATA_HDR_GET_DOT11(h)   (WMI_DATA_HDR_GET_DATA_TYPE((h)) == WMI_DATA_HDR_DATA_TYPE_802_11)
#define WMI_DATA_HDR_SET_DOT11(h, p) WMI_DATA_HDR_SET_DATA_TYPE((h), (p))
#define WMI_DATA_HDR_SEQNO_MASK     0xFFF
#define WMI_DATA_HDR_SEQNO_SHIFT    0
#define WMI_DATA_HDR_AMSDU_MASK     0x1
#define WMI_DATA_HDR_AMSDU_SHIFT    12
#define WMI_DATA_HDR_META_MASK      0x7
#define WMI_DATA_HDR_META_SHIFT     13
#define GET_SEQ_NO(_v)                  ((_v) & WMI_DATA_HDR_SEQNO_MASK)
#define GET_ISMSDU(_v)                  ((_v) & WMI_DATA_HDR_AMSDU_MASK)
#define WMI_DATA_HDR_GET_SEQNO(h)        GET_SEQ_NO((h)->info2 >> WMI_DATA_HDR_SEQNO_SHIFT)
#define WMI_DATA_HDR_SET_SEQNO(h, _v)   ((h)->info2 = ((h)->info2 & ~(WMI_DATA_HDR_SEQNO_MASK << WMI_DATA_HDR_SEQNO_SHIFT)) | (GET_SEQ_NO(_v) << WMI_DATA_HDR_SEQNO_SHIFT))
#define WMI_DATA_HDR_IS_AMSDU(h)        GET_ISMSDU((h)->info2 >> WMI_DATA_HDR_AMSDU_SHIFT)
#define WMI_DATA_HDR_SET_AMSDU(h, _v)   ((h)->info2 = ((h)->info2 & ~(WMI_DATA_HDR_AMSDU_MASK << WMI_DATA_HDR_AMSDU_SHIFT)) | (GET_ISMSDU(_v) << WMI_DATA_HDR_AMSDU_SHIFT))
#define WMI_DATA_HDR_GET_META(h)        (((h)->info2 >> WMI_DATA_HDR_META_SHIFT) & WMI_DATA_HDR_META_MASK)
#define WMI_DATA_HDR_SET_META(h, _v)    ((h)->info2 = ((h)->info2 & ~(WMI_DATA_HDR_META_MASK << WMI_DATA_HDR_META_SHIFT)) | ((_v) << WMI_DATA_HDR_META_SHIFT))
#define WMI_DATA_HDR_DEVID_MASK      0xF
#define WMI_DATA_HDR_DEVID_SHIFT     0
#define GET_DEVID(_v)                ((_v) & WMI_DATA_HDR_DEVID_MASK)
#define WMI_DATA_HDR_GET_DEVID(h) \
(((h)->info3 >> WMI_DATA_HDR_DEVID_SHIFT) & WMI_DATA_HDR_DEVID_MASK)
#define WMI_DATA_HDR_SET_DEVID(h, _v) \
((h)->info3 = ((h)->info3 & ~(WMI_DATA_HDR_DEVID_MASK << WMI_DATA_HDR_DEVID_SHIFT)) | (GET_DEVID(_v) << WMI_DATA_HDR_DEVID_SHIFT))
typedef PREPACK struct  POSTPACK WMI_DATA_HDR;
#define WMI_MAX_TX_META_SZ  (12)
#define WMI_MAX_TX_META_VERSION (7)
#define WMI_META_VERSION_1 (0x01)
#define WMI_META_VERSION_2 (0X02)
#define WMI_ACL_TO_DOT11_HEADROOM   36
typedef PREPACK struct  POSTPACK WMI_TX_META_V1;
#define WMI_CSUM_DIR_TX (0x1)
#define TX_CSUM_CALC_FILL (0x1)
typedef PREPACK struct  POSTPACK WMI_TX_META_V2;
#define WMI_MAX_RX_META_SZ  (12)
#define WMI_MAX_RX_META_VERSION (7)
#define WMI_RX_STATUS_OK            0
#define WMI_RX_STATUS_DECRYPT_ERR   1
#define WMI_RX_STATUS_MIC_ERR       2
#define WMI_RX_STATUS_ERR           3
#define WMI_RX_FLAGS_AGGR           0x0001
#define WMI_RX_FlAGS_STBC           0x0002
#define WMI_RX_FLAGS_SGI            0x0004
#define WMI_RX_FLAGS_HT             0x0008
#define WMI_RX_FLAGS_CRYPTO_SHIFT   4
#define WMI_RX_FLAGS_CRYPTO_MASK    0x1f
#define WMI_RX_META_GET_CRYPTO(flags) (((flags) >> WMI_RX_FLAGS_CRYPTO_SHIFT) & WMI_RX_FLAGS_CRYPTO_MASK)
typedef PREPACK struct  POSTPACK WMI_RX_META_V1;
#define RX_CSUM_VALID_FLAG (0x1)
typedef PREPACK struct  POSTPACK WMI_RX_META_V2;
#define WMI_GET_DEVICE_ID(info1) ((info1) & 0xF)
#define WMI_CMD_HDR_DEVID_MASK      0xF
#define WMI_CMD_HDR_DEVID_SHIFT     0
#define GET_CMD_DEVID(_v)           ((_v) & WMI_CMD_HDR_DEVID_MASK)
#define WMI_CMD_HDR_GET_DEVID(h) \
(((h)->info1 >> WMI_CMD_HDR_DEVID_SHIFT) & WMI_CMD_HDR_DEVID_MASK)
#define WMI_CMD_HDR_SET_DEVID(h, _v) \
((h)->info1 = ((h)->info1 & \
~(WMI_CMD_HDR_DEVID_MASK << WMI_CMD_HDR_DEVID_SHIFT)) | \
(GET_CMD_DEVID(_v) << WMI_CMD_HDR_DEVID_SHIFT))
typedef PREPACK struct  POSTPACK WMI_CMD_HDR;
typedef enum  WMI_COMMAND_ID;
typedef enum  WMI_MGMT_FRAME_TYPE;
typedef enum  NETWORK_TYPE;
typedef enum  DOT11_AUTH_MODE;
enum ;
typedef enum  AUTH_MODE;
typedef enum  CRYPTO_TYPE;
#define WMI_MIN_CRYPTO_TYPE NONE_CRYPT
#define WMI_MAX_CRYPTO_TYPE (AES_CRYPT + 1)
#undef WMI_MAX_CRYPTO_TYPE
#define WMI_MAX_CRYPTO_TYPE (WAPI_CRYPT + 1)
#define IW_ENCODE_ALG_SM4       0x20
#define IW_AUTH_WAPI_ENABLED    0x20
#define WMI_MIN_KEY_INDEX   0
#define WMI_MAX_KEY_INDEX   3
#undef WMI_MAX_KEY_INDEX
#define WMI_MAX_KEY_INDEX   7
#define WMI_MAX_KEY_LEN     32
#define WMI_MAX_SSID_LEN    32
typedef enum  WMI_CONNECT_CTRL_FLAGS_BITS;
#define DEFAULT_CONNECT_CTRL_FLAGS    (CONNECT_CSA_FOLLOW_BSS)
typedef PREPACK struct  POSTPACK WMI_CONNECT_CMD;
typedef PREPACK struct  POSTPACK WMI_RECONNECT_CMD;
#define WMI_PMK_LEN     32
typedef PREPACK struct  POSTPACK WMI_SET_PMK_CMD;
typedef PREPACK struct  POSTPACK WMI_SET_EXCESS_TX_RETRY_THRES_CMD;
typedef enum  KEY_USAGE;
#define KEY_OP_INIT_TSC       0x01
#define KEY_OP_INIT_RSC       0x02
#define KEY_OP_INIT_WAPIPN    0x10
#define KEY_OP_INIT_VAL     0x03
#define KEY_OP_VALID_MASK   0x03
typedef PREPACK struct  POSTPACK WMI_ADD_CIPHER_KEY_CMD;
typedef PREPACK struct  POSTPACK WMI_DELETE_CIPHER_KEY_CMD;
#define WMI_KRK_LEN     16
typedef PREPACK struct  POSTPACK WMI_ADD_KRK_CMD;
typedef enum  WMI_TKIP_CM_CONTROL;
typedef PREPACK struct  POSTPACK WMI_SET_TKIP_COUNTERMEASURES_CMD;
#define WMI_PMKID_LEN 16
typedef enum  PMKID_ENABLE_FLG;
typedef PREPACK struct  POSTPACK WMI_SET_PMKID_CMD;
typedef enum  WMI_SCAN_TYPE;
typedef PREPACK struct  POSTPACK WMI_START_SCAN_CMD;
#define WMI_SHORTSCANRATIO_DEFAULT      3
typedef enum  WMI_SCAN_CTRL_FLAGS_BITS;
#define CAN_SCAN_IN_CONNECT(flags)      (flags & CONNECT_SCAN_CTRL_FLAGS)
#define CAN_SCAN_CONNECTED(flags)       (flags & SCAN_CONNECTED_CTRL_FLAGS)
#define ENABLE_ACTIVE_SCAN(flags)       (flags & ACTIVE_SCAN_CTRL_FLAGS)
#define ENABLE_ROAM_SCAN(flags)         (flags & ROAM_SCAN_CTRL_FLAGS)
#define CONFIG_REPORT_BSSINFO(flags)     (flags & REPORT_BSSINFO_CTRL_FLAGS)
#define IS_AUTO_SCAN_ENABLED(flags)      (flags & ENABLE_AUTO_CTRL_FLAGS)
#define SCAN_ABORT_EVENT_ENABLED(flags) (flags & ENABLE_SCAN_ABORT_EVENT)
#define DEFAULT_SCAN_CTRL_FLAGS         (CONNECT_SCAN_CTRL_FLAGS| SCAN_CONNECTED_CTRL_FLAGS| ACTIVE_SCAN_CTRL_FLAGS| ROAM_SCAN_CTRL_FLAGS | ENABLE_AUTO_CTRL_FLAGS)
typedef PREPACK struct  POSTPACK WMI_SCAN_PARAMS_CMD;
typedef enum  WMI_BSS_FILTER;
typedef PREPACK struct  POSTPACK WMI_BSS_FILTER_CMD;
#define MAX_PROBED_SSID_INDEX   9
typedef enum  WMI_SSID_FLAG;
typedef PREPACK struct  POSTPACK WMI_PROBED_SSID_CMD;
#define MIN_LISTEN_INTERVAL 15
#define MAX_LISTEN_INTERVAL 5000
#define MIN_LISTEN_BEACONS 1
#define MAX_LISTEN_BEACONS 50
typedef PREPACK struct  POSTPACK WMI_LISTEN_INT_CMD;
typedef PREPACK struct  POSTPACK WMI_BEACON_INT_CMD;
#define MIN_BMISS_TIME     1000
#define MAX_BMISS_TIME     5000
#define MIN_BMISS_BEACONS  1
#define MAX_BMISS_BEACONS  50
typedef PREPACK struct  POSTPACK WMI_BMISS_TIME_CMD;
typedef enum  WMI_POWER_MODE;
typedef PREPACK struct  POSTPACK WMI_POWER_MODE_CMD;
typedef PREPACK struct  POSTPACK WMI_SET_PARAMS_REPLY;
typedef PREPACK struct  POSTPACK WMI_SET_PARAMS_CMD;
typedef PREPACK struct  POSTPACK WMI_SET_MCAST_FILTER_CMD;
typedef PREPACK struct  POSTPACK WMI_MCAST_FILTER_CMD;
typedef enum  WMI_DTIM_POLICY;
typedef enum  WMI_TX_WAKEUP_POLICY_UPON_SLEEP;
typedef enum  POWER_SAVE_FAIL_EVENT_POLICY;
typedef PREPACK struct  POSTPACK WMI_POWER_PARAMS_CMD;
typedef enum  WMI_ADHOC_PS_TYPE;
typedef PREPACK struct  POSTPACK WMI_IBSS_PM_CAPS_CMD;
typedef enum  WMI_AP_PS_TYPE;
typedef PREPACK struct  POSTPACK WMI_AP_PS_CMD;
typedef enum  APSD_TIM_POLICY;
typedef PREPACK struct  POSTPACK WMI_POWERSAVE_TIMERS_POLICY_CMD;
typedef PREPACK struct  POSTPACK WMI_SET_VOICE_PKT_SIZE_CMD;
typedef enum  APSD_SP_LEN_TYPE;
typedef PREPACK struct  POSTPACK WMI_SET_MAX_SP_LEN_CMD;
typedef PREPACK struct  POSTPACK WMI_DISC_TIMEOUT_CMD;
typedef enum  DIR_TYPE;
typedef enum  VOICEPS_CAP_TYPE;
typedef enum TRAFFIC_TYPE;
typedef PREPACK struct  POSTPACK WMI_SYNC_CMD;
typedef PREPACK struct  POSTPACK WMI_CREATE_PSTREAM_CMD;
typedef PREPACK struct  POSTPACK WMI_DELETE_PSTREAM_CMD;
typedef enum  WMI_PHY_MODE;
#define WMI_MAX_CHANNELS        32
typedef PREPACK struct  POSTPACK WMI_CHANNEL_PARAMS_CMD;
typedef PREPACK struct WMI_RSSI_THRESHOLD_PARAMS POSTPACK  WMI_RSSI_THRESHOLD_PARAMS_CMD;
typedef PREPACK struct WMI_SNR_THRESHOLD_PARAMS POSTPACK WMI_SNR_THRESHOLD_PARAMS_CMD;
typedef PREPACK struct WMI_LQ_THRESHOLD_PARAMS  POSTPACK  WMI_LQ_THRESHOLD_PARAMS_CMD;
typedef enum  WMI_LPREAMBLE_STATUS;
typedef enum  WMI_PREAMBLE_POLICY;
typedef PREPACK struct POSTPACK WMI_SET_LPREAMBLE_CMD;
typedef PREPACK struct POSTPACK WMI_SET_RTS_CMD;
typedef PREPACK struct  POSTPACK  WMI_TARGET_ERROR_REPORT_BITMASK;
typedef PREPACK struct  POSTPACK WMI_SET_TX_PWR_CMD, WMI_TX_PWR_REPLY;
#define WMI_MAX_ASSOC_INFO_TYPE    2
#define WMI_CCX_VER_IE             2
#define WMI_MAX_ASSOC_INFO_LEN     240
typedef PREPACK struct  POSTPACK WMI_SET_ASSOC_INFO_CMD;
#define WMI_MAX_BAD_AP_INDEX      1
typedef PREPACK struct  POSTPACK WMI_ADD_BAD_AP_CMD;
typedef PREPACK struct  POSTPACK WMI_DELETE_BAD_AP_CMD;
#define WMI_DEFAULT_TXOP_ACPARAM    0
#define WMI_DEFAULT_ECWMIN_ACPARAM  4
#define WMI_DEFAULT_ECWMAX_ACPARAM  10
#define WMI_MAX_CW_ACPARAM          15
#define WMI_DEFAULT_AIFSN_ACPARAM   2
#define WMI_MAX_AIFSN_ACPARAM       15
typedef PREPACK struct  POSTPACK WMI_SET_ACCESS_PARAMS_CMD;
#define WMI_MIN_RETRIES 2
#define WMI_MAX_RETRIES 13
typedef enum  WMI_FRAMETYPE;
typedef PREPACK struct  POSTPACK WMI_SET_RETRY_LIMITS_CMD;
typedef enum  WMI_ROAM_CTRL_TYPE;
#define WMI_MIN_ROAM_CTRL_TYPE WMI_FORCE_ROAM
#define WMI_MAX_ROAM_CTRL_TYPE WMI_SET_LOWRSSI_SCAN_PARAMS
typedef enum  WMI_ROAM_MODE;
typedef PREPACK struct  POSTPACK WMI_BSS_BIAS;
typedef PREPACK struct  POSTPACK WMI_BSS_BIAS_INFO;
typedef PREPACK struct WMI_LOWRSSI_SCAN_PARAMS  POSTPACK WMI_LOWRSSI_SCAN_PARAMS;
typedef PREPACK struct  POSTPACK WMI_SET_ROAM_CTRL_CMD;
typedef enum  BT_WLAN_CONN_PRECEDENCE;
typedef PREPACK struct  POSTPACK WMI_SET_BT_WLAN_CONN_PRECEDENCE;
typedef PREPACK struct  POSTPACK WMI_ENABLE_RM_CMD;
typedef PREPACK struct  POSTPACK WMI_SET_MAX_OFFHOME_DURATION_CMD;
typedef PREPACK struct  POSTPACK WMI_SET_HB_CHALLENGE_RESP_PARAMS_CMD;
typedef enum  BT_STREAM_TYPE;
typedef enum  BT_PARAMS_SCO_PSPOLL_LATENCY;
typedef enum  BT_PARAMS_SCO_STOMP_RULES;
typedef enum  BT_STREAM_STATUS;
typedef PREPACK struct  POSTPACK WMI_SET_BT_STATUS_CMD;
typedef enum  BT_ANT_FRONTEND_CONFIG;
typedef enum  BT_COLOCATED_DEV_TYPE;
typedef enum  BT_PARAM_TYPE;
#define BT_SCO_ALLOW_CLOSE_RANGE_OPT    (1 << 0)
#define BT_SCO_FORCE_AWAKE_OPT          (1 << 1)
#define BT_SCO_SET_RSSI_OVERRIDE(flags)        ((flags) |= (1 << 2))
#define BT_SCO_GET_RSSI_OVERRIDE(flags)        (((flags) >> 2) & 0x1)
#define BT_SCO_SET_RTS_OVERRIDE(flags)   ((flags) |= (1 << 3))
#define BT_SCO_GET_RTS_OVERRIDE(flags)   (((flags) >> 3) & 0x1)
#define BT_SCO_GET_MIN_LOW_RATE_CNT(flags)     (((flags) >> 8) & 0xFF)
#define BT_SCO_GET_MAX_LOW_RATE_CNT(flags)     (((flags) >> 16) & 0xFF)
#define BT_SCO_SET_MIN_LOW_RATE_CNT(flags,val) (flags) |= (((val) & 0xFF) << 8)
#define BT_SCO_SET_MAX_LOW_RATE_CNT(flags,val) (flags) |= (((val) & 0xFF) << 16)
typedef PREPACK struct  POSTPACK BT_PARAMS_SCO;
#define BT_A2DP_ALLOW_CLOSE_RANGE_OPT  (1 << 0)
#define BT_A2DP_FORCE_AWAKE_OPT        (1 << 1)
#define BT_A2DP_SET_RSSI_OVERRIDE(flags)        ((flags) |= (1 << 2))
#define BT_A2DP_GET_RSSI_OVERRIDE(flags)        (((flags) >> 2) & 0x1)
#define BT_A2DP_SET_RTS_OVERRIDE(flags)   ((flags) |= (1 << 3))
#define BT_A2DP_GET_RTS_OVERRIDE(flags)   (((flags) >> 3) & 0x1)
#define BT_A2DP_GET_MIN_LOW_RATE_CNT(flags)     (((flags) >> 8) & 0xFF)
#define BT_A2DP_GET_MAX_LOW_RATE_CNT(flags)     (((flags) >> 16) & 0xFF)
#define BT_A2DP_SET_MIN_LOW_RATE_CNT(flags,val) (flags) |= (((val) & 0xFF) << 8)
#define BT_A2DP_SET_MAX_LOW_RATE_CNT(flags,val) (flags) |= (((val) & 0xFF) << 16)
typedef PREPACK struct POSTPACK BT_PARAMS_A2DP;
typedef PREPACK struct POSTPACK BT_PARAMS_ACLCOEX;
typedef PREPACK struct  POSTPACK WMI_SET_BT_PARAMS_CMD;
typedef enum WMI_BTCOEX_FE_ANT_TYPE;
typedef PREPACK struct POSTPACK WMI_SET_BTCOEX_FE_ANT_CMD;
typedef PREPACK struct POSTPACK WMI_SET_BTCOEX_COLOCATED_BT_DEV_CMD;
typedef PREPACK struct POSTPACK WMI_SET_BTCOEX_BTINQUIRY_PAGE_CONFIG_CMD;
#define WMI_SCO_CONFIG_FLAG_ALLOW_OPTIMIZATION   (1 << 0)
#define WMI_SCO_CONFIG_FLAG_IS_EDR_CAPABLE       (1 << 1)
#define WMI_SCO_CONFIG_FLAG_IS_BT_MASTER         (1 << 2)
#define WMI_SCO_CONFIG_FLAG_FW_DETECT_OF_PER     (1 << 3)
typedef PREPACK struct POSTPACK BTCOEX_SCO_CONFIG;
typedef PREPACK struct POSTPACK BTCOEX_PSPOLLMODE_SCO_CONFIG;
typedef PREPACK struct POSTPACK BTCOEX_OPTMODE_SCO_CONFIG;
typedef PREPACK struct POSTPACK BTCOEX_WLANSCAN_SCO_CONFIG;
typedef PREPACK struct POSTPACK WMI_SET_BTCOEX_SCO_CONFIG_CMD;
#define WMI_A2DP_CONFIG_FLAG_ALLOW_OPTIMIZATION    (1 << 0)
#define WMI_A2DP_CONFIG_FLAG_IS_EDR_CAPABLE        (1 << 1)
#define WMI_A2DP_CONFIG_FLAG_IS_BT_ROLE_MASTER     (1 << 2)
#define WMI_A2DP_CONFIG_FLAG_IS_A2DP_HIGH_PRI      (1 << 3)
#define WMI_A2DP_CONFIG_FLAG_FIND_BT_ROLE          (1 << 4)
typedef PREPACK struct POSTPACK BTCOEX_A2DP_CONFIG;
typedef PREPACK struct POSTPACK BTCOEX_PSPOLLMODE_A2DP_CONFIG;
typedef PREPACK struct POSTPACK BTCOEX_OPTMODE_A2DP_CONFIG;
typedef PREPACK struct POSTPACK WMI_SET_BTCOEX_A2DP_CONFIG_CMD;
#define WMI_ACLCOEX_FLAGS_ALLOW_OPTIMIZATION   (1 << 0)
#define WMI_ACLCOEX_FLAGS_DISABLE_FW_DETECTION (1 << 1)
typedef PREPACK struct POSTPACK BTCOEX_ACLCOEX_CONFIG;
typedef PREPACK struct POSTPACK BTCOEX_PSPOLLMODE_ACLCOEX_CONFIG;
typedef PREPACK struct POSTPACK BTCOEX_OPTMODE_ACLCOEX_CONFIG;
typedef PREPACK struct POSTPACK WMI_SET_BTCOEX_ACLCOEX_CONFIG_CMD;
typedef enum WMI_BTCOEX_BT_PROFILE;
typedef PREPACK struct WMI_SET_BTCOEX_BT_OPERATING_STATUS_CMD;
typedef PREPACK struct WMI_SET_BTCOEX_DEBUG_CMD;
typedef PREPACK struct WMI_GET_BTCOEX_CONFIG_CMD;
typedef PREPACK struct  POSTPACK WMI_BTCOEX_CONFIG_EVENT;
typedef PREPACK struct BTCOEX_GENERAL_STATS;
typedef PREPACK struct BTCOEX_SCO_STATS;
typedef PREPACK struct BTCOEX_A2DP_STATS;
typedef PREPACK struct BTCOEX_ACLCOEX_STATS;
typedef PREPACK struct WMI_BTCOEX_STATS_EVENT;
typedef PREPACK struct WMI_REPORT_SLEEP_STATE_EVENT;
typedef enum  WMI_REPORT_SLEEP_STATUS;
typedef enum  TARGET_EVENT_REPORT_CONFIG;
typedef PREPACK struct  POSTPACK WMI_SET_TARGET_EVENT_REPORT_CMD;
typedef PREPACK struct  POSTPACK WMI_HCI_CMD;
typedef PREPACK struct  POSTPACK WMI_CHANNEL_LIST_REPLY;
typedef enum  PSTREAM_REPLY_STATUS;
typedef PREPACK struct  POSTPACK WMI_CRE_PRIORITY_STREAM_REPLY;
typedef PREPACK struct  POSTPACK WMI_DEL_PRIORITY_STREAM_REPLY;
typedef enum  WMI_EVENT_ID;
typedef enum  WMI_PHY_CAPABILITY;
typedef PREPACK struct  POSTPACK WMI_READY_EVENT_1;
typedef PREPACK struct  POSTPACK WMI_READY_EVENT_2;
#if defined(ATH_TARGET)
#define WMI_READY_EVENT WMI_READY_EVENT_1
#define WMI_READY_EVENT WMI_READY_EVENT_2
#define WMI_READY_EVENT WMI_READY_EVENT_2
typedef PREPACK struct  POSTPACK WMI_CONNECT_EVENT;
typedef enum  WMI_DISCONNECT_REASON;
typedef PREPACK struct  POSTPACK WMI_DISCONNECT_EVENT;
typedef enum  WMI_BI_FTYPE;
enum ;
typedef PREPACK struct  POSTPACK WMI_BSS_INFO_HDR;
typedef PREPACK struct  POSTPACK WMI_BSS_INFO_HDR2;
typedef enum  WMI_ERROR_CODE;
typedef PREPACK struct  POSTPACK WMI_CMD_ERROR_EVENT;
typedef PREPACK struct  POSTPACK WMI_REG_DOMAIN_EVENT;
typedef PREPACK struct  POSTPACK WMI_PSTREAM_TIMEOUT_EVENT;
typedef PREPACK struct  POSTPACK WMI_ACM_REJECT_EVENT;
typedef enum  WMI_BSS_FLAGS;
typedef PREPACK struct  POSTPACK WMI_NEIGHBOR_INFO;
typedef PREPACK struct  POSTPACK WMI_NEIGHBOR_REPORT_EVENT;
typedef PREPACK struct  POSTPACK WMI_TKIP_MICERR_EVENT;
typedef PREPACK struct  POSTPACK WMI_SCAN_COMPLETE_EVENT;
#define MAX_OPT_DATA_LEN 1400
typedef PREPACK struct  POSTPACK WMI_SET_ADHOC_BSSID_CMD;
typedef enum  OPT_MODE_TYPE;
typedef PREPACK struct  POSTPACK WMI_SET_OPT_MODE_CMD;
typedef enum  WMI_OPT_FTYPE;
typedef PREPACK struct  POSTPACK WMI_OPT_TX_FRAME_CMD;
typedef PREPACK struct  POSTPACK WMI_OPT_RX_INFO_HDR;
typedef PREPACK struct POSTPACK tx_stats_t;
typedef PREPACK struct POSTPACK rx_stats_t;
typedef PREPACK struct POSTPACK tkip_ccmp_stats_t;
typedef PREPACK struct POSTPACK pm_stats_t;
typedef PREPACK struct  POSTPACK cserv_stats_t;
typedef PREPACK struct POSTPACK wlan_net_stats_t;
typedef PREPACK struct  POSTPACK arp_stats_t;
typedef PREPACK struct  POSTPACK wlan_wow_stats_t;
typedef PREPACK struct  POSTPACK WMI_TARGET_STATS;
typedef enumWMI_RSSI_THRESHOLD_VAL;
typedef PREPACK struct POSTPACK WMI_RSSI_THRESHOLD_EVENT;
typedef enum WMI_TARGET_ERROR_VAL;
typedef PREPACK struct POSTPACK  WMI_TARGET_ERROR_REPORT_EVENT;
typedef PREPACK struct POSTPACK  WMI_TX_RETRY_ERR_EVENT;
typedef enum WMI_SNR_THRESHOLD_VAL;
typedef PREPACK struct POSTPACK  WMI_SNR_THRESHOLD_EVENT;
typedef enum WMI_LQ_THRESHOLD_VAL;
typedef PREPACK struct POSTPACK  WMI_LQ_THRESHOLD_EVENT;
#define MAX_ROAM_TBL_CAND   5
typedef PREPACK struct  POSTPACK WMI_BSS_ROAM_INFO;
typedef PREPACK struct  POSTPACK WMI_TARGET_ROAM_TBL;
typedef PREPACK struct  POSTPACK WMI_HCI_EVENT;
typedef enum CAC_INDICATION;
#define WMM_TSPEC_IE_LEN   63
typedef PREPACK struct POSTPACK  WMI_CAC_EVENT;
typedef enum  APLIST_VER;
typedef PREPACK struct  POSTPACK  WMI_AP_INFO_V1;
typedef PREPACK union  POSTPACK WMI_AP_INFO;
typedef PREPACK struct  POSTPACK WMI_APLIST_EVENT;
typedef enum  WMI_BIT_RATE;
typedef PREPACK struct  POSTPACK WMI_BIT_RATE_CMD;
typedef PREPACK struct  POSTPACK  WMI_BIT_RATE_REPLY;
#define FIX_RATE_1Mb            ((u32)0x1)
#define FIX_RATE_2Mb            ((u32)0x2)
#define FIX_RATE_5_5Mb          ((u32)0x4)
#define FIX_RATE_11Mb           ((u32)0x8)
#define FIX_RATE_6Mb            ((u32)0x10)
#define FIX_RATE_9Mb            ((u32)0x20)
#define FIX_RATE_12Mb           ((u32)0x40)
#define FIX_RATE_18Mb           ((u32)0x80)
#define FIX_RATE_24Mb           ((u32)0x100)
#define FIX_RATE_36Mb           ((u32)0x200)
#define FIX_RATE_48Mb           ((u32)0x400)
#define FIX_RATE_54Mb           ((u32)0x800)
#define FIX_RATE_MCS_0_20       ((u32)0x1000)
#define FIX_RATE_MCS_1_20       ((u32)0x2000)
#define FIX_RATE_MCS_2_20       ((u32)0x4000)
#define FIX_RATE_MCS_3_20       ((u32)0x8000)
#define FIX_RATE_MCS_4_20       ((u32)0x10000)
#define FIX_RATE_MCS_5_20       ((u32)0x20000)
#define FIX_RATE_MCS_6_20       ((u32)0x40000)
#define FIX_RATE_MCS_7_20       ((u32)0x80000)
#define FIX_RATE_MCS_0_40       ((u32)0x100000)
#define FIX_RATE_MCS_1_40       ((u32)0x200000)
#define FIX_RATE_MCS_2_40       ((u32)0x400000)
#define FIX_RATE_MCS_3_40       ((u32)0x800000)
#define FIX_RATE_MCS_4_40       ((u32)0x1000000)
#define FIX_RATE_MCS_5_40       ((u32)0x2000000)
#define FIX_RATE_MCS_6_40       ((u32)0x4000000)
#define FIX_RATE_MCS_7_40       ((u32)0x8000000)
typedef PREPACK struct  POSTPACK WMI_FIX_RATES_CMD, WMI_FIX_RATES_REPLY;
typedef PREPACK struct  POSTPACK WMI_FRAME_RATES_CMD, WMI_FRAME_RATES_REPLY;
typedef enum  WMI_AUTH_MODE;
typedef PREPACK struct  POSTPACK WMI_SET_AUTH_MODE_CMD;
typedef enum  WMI_REASSOC_MODE;
typedef PREPACK struct POSTPACK WMI_SET_REASSOC_MODE_CMD;
typedef enum  ROAM_DATA_TYPE;
typedef PREPACK struct  POSTPACK WMI_TARGET_ROAM_TIME;
typedef PREPACK struct  POSTPACK WMI_TARGET_ROAM_DATA;
typedef enum  WMI_WMM_STATUS;
typedef PREPACK struct POSTPACK WMI_SET_WMM_CMD;
typedef PREPACK struct POSTPACK WMI_SET_QOS_SUPP_CMD;
typedef enum  WMI_TXOP_CFG;
typedef PREPACK struct POSTPACK WMI_SET_WMM_TXOP_CMD;
typedef PREPACK struct  POSTPACK WMI_SET_KEEPALIVE_CMD;
typedef PREPACK struct  POSTPACK WMI_GET_KEEPALIVE_CMD;
#define WMI_MAX_IE_LEN  255
typedef PREPACK struct  POSTPACK WMI_SET_APPIE_CMD;
#define WSC_REG_ACTIVE     1
#define WSC_REG_INACTIVE   0
typedef enum WHAL_CMDID;
typedef PREPACK struct  POSTPACK WHAL_SETCABTO_PARAM;
typedef PREPACK struct  POSTPACK WHAL_PARAMCMD;
#define WOW_MAX_FILTER_LISTS 1
#define WOW_MAX_FILTERS_PER_LIST 4
#define WOW_PATTERN_SIZE 64
#define WOW_MASK_SIZE 64
#define MAC_MAX_FILTERS_PER_LIST 4
typedef PREPACK struct  POSTPACK WOW_FILTER;
typedef PREPACK struct  POSTPACK WOW_FILTER_LIST;
typedef PREPACK struct  POSTPACK MAC_FILTER;
typedef PREPACK struct  POSTPACK MAC_FILTER_LIST;
#define MAX_IP_ADDRS  2
typedef PREPACK struct  POSTPACK WMI_SET_IP_CMD;
typedef PREPACK struct  POSTPACK WMI_SET_HOST_SLEEP_MODE_CMD;
typedef enum  WMI_WOW_FILTER;
typedef PREPACK struct  POSTPACK WMI_SET_WOW_MODE_CMD;
typedef PREPACK struct  POSTPACK WMI_GET_WOW_LIST_CMD;
typedef PREPACK struct  POSTPACK WMI_GET_WOW_LIST_REPLY;
typedef PREPACK struct  POSTPACK WMI_ADD_WOW_PATTERN_CMD;
typedef PREPACK struct  POSTPACK WMI_DEL_WOW_PATTERN_CMD;
typedef PREPACK struct  POSTPACK WMI_SET_MAC_ADDRESS_CMD;
#define WMI_AKMP_MULTI_PMKID_EN   0x000001
typedef PREPACK struct  POSTPACK WMI_SET_AKMP_PARAMS_CMD;
typedef PREPACK struct  POSTPACK WMI_PMKID;
#define WMI_MAX_PMKID_CACHE   8
typedef PREPACK struct  POSTPACK WMI_SET_PMKID_LIST_CMD;
typedef PREPACK struct  POSTPACK WMI_PMKID_LIST_REPLY;
typedef PREPACK struct  POSTPACK WMI_CHANNEL_CHANGE_EVENT;
typedef PREPACK struct  POSTPACK WMI_WLAN_VERSION_EVENT;
typedef PREPACK struct  POSTPACK WMI_ADDBA_REQ_EVENT;
typedef PREPACK struct  POSTPACK WMI_ADDBA_RESP_EVENT;
typedef PREPACK struct  POSTPACK WMI_DELBA_EVENT;
#define WAPI_REKEY_UCAST    1
#define WAPI_REKEY_MCAST    2
typedef PREPACK struct  POSTPACK WMI_WAPIREKEY_EVENT;
typedef PREPACK struct  POSTPACK WMI_ALLOW_AGGR_CMD;
typedef PREPACK struct  POSTPACK WMI_ADDBA_REQ_CMD;
typedef PREPACK struct  POSTPACK WMI_DELBA_REQ_CMD;
#define PEER_NODE_JOIN_EVENT 0x00
#define PEER_NODE_LEAVE_EVENT 0x01
#define PEER_FIRST_NODE_JOIN_EVENT 0x10
#define PEER_LAST_NODE_LEAVE_EVENT 0x11
typedef PREPACK struct  POSTPACK WMI_PEER_NODE_EVENT;
#define IEEE80211_FRAME_TYPE_MGT          0x00
#define IEEE80211_FRAME_TYPE_CTL          0x04
typedef PREPACK struct  POSTPACK TX_COMPLETE_MSG_V1;
typedef PREPACK struct  POSTPACK WMI_TX_COMPLETE_EVENT;
#define WMI_TXCOMPLETE_VERSION_1 (0x01)
#define AP_MAX_NUM_STA          4
#define AP_MAX_NUM_STA          8
#define AP_ACL_SIZE             10
#define IEEE80211_MAX_IE        256
#define MCAST_AID               0xFF
#define DEF_AP_COUNTRY_CODE     "US "
#define DEF_AP_WMODE_G          WMI_11G_MODE
#define DEF_AP_WMODE_AG         WMI_11AG_MODE
#define DEF_AP_DTIM             5
#define DEF_BEACON_INTERVAL     100
#define AP_DISCONNECT_STA_LEFT      101
#define AP_DISCONNECT_FROM_HOST     102
#define AP_DISCONNECT_COMM_TIMEOUT  103
#define HIDDEN_SSID_FALSE   0
#define HIDDEN_SSID_TRUE    1
typedef PREPACK struct  POSTPACK WMI_AP_HIDDEN_SSID_CMD;
#define AP_ACL_DISABLE          0x00
#define AP_ACL_ALLOW_MAC        0x01
#define AP_ACL_DENY_MAC         0x02
#define AP_ACL_RETAIN_LIST_MASK 0x80
typedef PREPACK struct  POSTPACK WMI_AP_ACL_POLICY_CMD;
#define ADD_MAC_ADDR    1
#define DEL_MAC_ADDR    2
typedef PREPACK struct  POSTPACK WMI_AP_ACL_MAC_CMD;
typedef PREPACK struct  POSTPACK WMI_AP_ACL;
typedef PREPACK struct  POSTPACK WMI_AP_SET_NUM_STA_CMD;
typedef PREPACK struct  POSTPACK WMI_AP_SET_MLME_CMD;
typedef PREPACK struct  POSTPACK WMI_AP_CONN_INACT_CMD;
typedef PREPACK struct  POSTPACK WMI_AP_PROT_SCAN_TIME_CMD;
typedef PREPACK struct  POSTPACK WMI_AP_SET_PVB_CMD;
#define WMI_DISABLE_REGULATORY_CODE "FF"
typedef PREPACK struct  POSTPACK WMI_AP_SET_COUNTRY_CMD;
typedef PREPACK struct  POSTPACK WMI_AP_SET_DTIM_CMD;
typedef PREPACK struct  POSTPACK WMI_SET_HT_CAP_CMD;
typedef PREPACK struct  POSTPACK WMI_SET_HT_OP_CMD;
typedef PREPACK struct  POSTPACK WMI_SET_TX_SELECT_RATES_CMD;
typedef PREPACK struct  POSTPACK WMI_SET_TX_SGI_PARAM_CMD;
#define DEFAULT_SGI_MASK 0x08080000
#define DEFAULT_SGI_PER 10
typedef PREPACK struct  POSTPACK WMI_SET_RATE_POLICY_CMD;
typedef PREPACK struct  POSTPACK WMI_RX_FRAME_FORMAT_CMD;
typedef PREPACK struct  POSTPACK WMI_SET_THIN_MODE_CMD;
typedef PREPACK struct  POSTPACK WMI_PSPOLL_EVENT;
typedef PREPACK struct  POSTPACK WMI_PER_STA_STAT;
#define AP_GET_STATS    0
#define AP_CLEAR_STATS  1
typedef PREPACK struct  POSTPACK WMI_AP_MODE_STAT;
#define WMI_AP_MODE_STAT_SIZE(numSta) (sizeof(u32) + ((numSta + 1) * sizeof(WMI_PER_STA_STAT)))
#define AP_11BG_RATESET1        1
#define AP_11BG_RATESET2        2
#define DEF_AP_11BG_RATESET     AP_11BG_RATESET1
typedef PREPACK struct  POSTPACK WMI_AP_SET_11BG_RATESET_CMD;
