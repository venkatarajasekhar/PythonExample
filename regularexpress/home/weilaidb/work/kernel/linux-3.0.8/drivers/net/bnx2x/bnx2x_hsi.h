#define BNX2X_HSI_H
#define FW_ENCODE_32BIT_PATTERN		0x1e1e1e1e
struct license_key ;
#define PORT_0				0
#define PORT_1				1
#define PORT_MAX			2
struct shared_hw_cfg ;
struct port_hw_cfg ;
struct shared_feat_cfg ;
struct port_feat_cfg ;
struct shm_dev_info ;
#define FUNC_0				0
#define FUNC_1				1
#define FUNC_2				2
#define FUNC_3				3
#define FUNC_4				4
#define FUNC_5				5
#define FUNC_6				6
#define FUNC_7				7
#define E1_FUNC_MAX			2
#define E1H_FUNC_MAX			8
#define E2_FUNC_MAX	    4
#define VN_0				0
#define VN_1				1
#define VN_2				2
#define VN_3				3
#define E1VN_MAX			1
#define E1HVN_MAX			4
#define E2_VF_MAX			64
#define DRV_PULSE_PERIOD_MS		250
#define FW_ACK_TIME_OUT_MS		5000
#define FW_ACK_POLL_TIME_MS		1
#define FW_ACK_NUM_OF_POLL	(FW_ACK_TIME_OUT_MS/FW_ACK_POLL_TIME_MS)
#define LED_BLINK_RATE_VAL		480
struct drv_port_mb ;
struct drv_func_mb ;
#define MGMTFW_STATE_WORD_SIZE				    110
struct mgmtfw_state ;
struct shared_mf_cfg ;
struct port_mf_cfg ;
struct func_mf_cfg ;
struct func_ext_cfg ;
struct mf_cfg ;
struct shmem_region ;
struct fw_flr_ack ;
struct fw_flr_mb ;
#define SHMEM_ARRAY_MASK(eb)		((1<<(eb))-1)
#define SHMEM_ARRAY_ENTRY(i, eb)	((i)/(32/(eb)))
#define SHMEM_ARRAY_BITPOS(i, eb, fb)	\
((((32/(fb)) - 1 - ((i)/((fb)/(eb))) % (32/(fb))) * (fb)) + \
(((i)%((fb)/(eb))) * (eb)))
#define SHMEM_ARRAY_GET(a, i, eb, fb)					   \
((a[SHMEM_ARRAY_ENTRY(i, eb)] >> SHMEM_ARRAY_BITPOS(i, eb, fb)) &  \
SHMEM_ARRAY_MASK(eb))
#define SHMEM_ARRAY_SET(a, i, eb, fb, val)				   \
do  while (0)
#define DCBX_MAX_NUM_PRI_PG_ENTRIES	8
#define DCBX_PRI_PG_BITWIDTH		4
#define DCBX_PRI_PG_FBITS		8
#define DCBX_PRI_PG_GET(a, i)		\
SHMEM_ARRAY_GET(a, i, DCBX_PRI_PG_BITWIDTH, DCBX_PRI_PG_FBITS)
#define DCBX_PRI_PG_SET(a, i, val)	\
SHMEM_ARRAY_SET(a, i, DCBX_PRI_PG_BITWIDTH, DCBX_PRI_PG_FBITS, val)
#define DCBX_MAX_NUM_PG_BW_ENTRIES	8
#define DCBX_BW_PG_BITWIDTH		8
#define DCBX_PG_BW_GET(a, i)		\
SHMEM_ARRAY_GET(a, i, DCBX_BW_PG_BITWIDTH, DCBX_BW_PG_BITWIDTH)
#define DCBX_PG_BW_SET(a, i, val)	\
SHMEM_ARRAY_SET(a, i, DCBX_BW_PG_BITWIDTH, DCBX_BW_PG_BITWIDTH, val)
#define DCBX_STRICT_PRI_PG		15
#define DCBX_MAX_APP_PROTOCOL		16
#define FCOE_APP_IDX			0
#define ISCSI_APP_IDX			1
#define PREDEFINED_APP_IDX_MAX		2
struct dcbx_ets_feature ;
struct dcbx_pfc_feature ;
struct dcbx_app_priority_entry ;
struct dcbx_app_priority_feature ;
struct dcbx_features ;
struct lldp_params ;
struct lldp_dcbx_stat ;
struct lldp_admin_mib ;
struct lldp_remote_mib ;
struct lldp_local_mib ;
struct shmem2_region ;
struct emac_stats ;
struct bmac1_stats ;
struct bmac2_stats ;
union mac_stats ;
struct mac_stx ;
#define MAC_STX_IDX_MAX 		    2
struct host_port_stats ;
struct host_func_stats ;
#define BCM_5710_FW_MAJOR_VERSION			6
#define BCM_5710_FW_MINOR_VERSION			2
#define BCM_5710_FW_REVISION_VERSION			9
#define BCM_5710_FW_ENGINEERING_VERSION			0
#define BCM_5710_FW_COMPILE_FLAGS			1
struct atten_sp_status_block ;
struct doorbell_hdr ;
struct doorbell ;
struct doorbell_set_prod ;
struct hc_status_block_e1x ;
struct host_hc_status_block_e1x ;
struct hc_status_block_e2 ;
struct host_hc_status_block_e2 ;
struct hc_sp_status_block ;
struct host_sp_status_block ;
struct igu_ack_register ;
struct igu_backward_compatible ;
struct igu_regular ;
union igu_consprod_reg ;
struct igu_ctrl_reg ;
struct parsing_flags ;
struct regpair ;
struct dmae_command ;
struct double_regpair ;
struct sdm_op_gen ;
struct eth_rx_bd ;
struct eth_rx_sge ;
struct ustorm_eth_st_context ;
struct tstorm_eth_st_context ;
struct xstorm_eth_ag_context ;
struct tstorm_eth_ag_context ;
struct cstorm_eth_ag_context ;
struct ustorm_eth_ag_context ;
struct timers_block_context ;
struct eth_tx_bd_flags ;
struct eth_tx_start_bd ;
struct eth_tx_bd ;
struct eth_tx_parse_bd_e1x ;
struct eth_tx_parse_bd_e2 ;
struct eth_tx_next_bd ;
union eth_tx_bd_types ;
struct xstorm_eth_st_context ;
struct cstorm_eth_st_context ;
struct eth_context ;
struct eth_tx_doorbell ;
struct client_init_fc_data ;
struct client_init_general_data ;
struct client_init_rx_data ;
struct client_init_tx_data ;
struct client_init_ramrod_data ;
struct eth_common_ramrod_data ;
union eth_sgl_or_raw_data ;
struct eth_fast_path_rx_cqe ;
struct eth_halt_ramrod_data ;
struct common_query_ramrod_data ;
struct ramrod_data ;
union eth_ramrod_data ;
struct common_ramrod_eth_rx_cqe ;
struct eth_rx_cqe_next_page ;
union eth_rx_cqe ;
struct spe_hdr ;
union eth_specific_data ;
struct eth_spe ;
struct eth_tx_bds_array ;
struct tstorm_eth_function_common_config ;
struct rss_update_config ;
struct eth_update_ramrod_data ;
struct mac_configuration_hdr ;
struct mac_configuration_entry ;
struct mac_configuration_cmd ;
struct tstorm_eth_approximate_match_multicast_filtering ;
struct tstorm_eth_mac_filter_config ;
struct tstorm_eth_tpa_exist ;
struct ustorm_eth_rx_producers ;
struct cfc_del_event_data ;
struct cmng_flags_per_port ;
struct rate_shaping_vars_per_port ;
struct fairness_vars_per_port ;
struct safc_struct_per_port ;
struct pfc_struct_per_port ;
struct priority_cos ;
struct cmng_struct_per_port ;
struct hc_dynamic_drv_counter ;
struct cstorm_queue_zone_data ;
struct dynamic_hc_config ;
struct xstorm_per_client_stats ;
struct xstorm_common_stats ;
struct tstorm_per_port_stats ;
struct tstorm_per_client_stats ;
struct tstorm_common_stats ;
struct ustorm_per_client_stats ;
struct ustorm_common_stats ;
struct eth_stats_query ;
struct set_mac_event_data ;
union event_data ;
struct event_ring_data ;
struct event_ring_msg ;
struct event_ring_next ;
union event_ring_elem ;
struct fairness_vars_per_vn ;
struct flow_control_configuration ;
struct fw_version ;
struct hc_dynamic_sb_drv_counters ;
struct hc_index_data ;
struct hc_status_block_sm ;
struct pci_entity ;
struct hc_sb_data ;
struct hc_sp_status_block_data ;
struct hc_status_block_data_e1x ;
struct hc_status_block_data_e2 ;
struct pram_fw_version ;
union protocol_common_specific_data ;
struct protocol_common_spe ;
struct rate_shaping_counter ;
struct rate_shaping_vars_per_vn ;
struct slow_path_element ;
struct stats_indication_flags ;
struct storm_pfc_struct_per_port ;
struct storm_cmng_struct_per_port ;
struct tstorm_queue_zone_data ;
struct tstorm_vf_zone_data ;
struct ustorm_queue_zone_data ;
struct ustorm_vf_zone_data ;
struct vf_pf_channel_data ;
struct xstorm_queue_zone_data ;
struct xstorm_vf_zone_data ;
