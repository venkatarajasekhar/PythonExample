#define FDMI_DID        0xfffffaU
#define NameServer_DID  0xfffffcU
#define SCR_DID         0xfffffdU
#define Fabric_DID      0xfffffeU
#define Bcast_DID       0xffffffU
#define Mask_DID        0xffffffU
#define CT_DID_MASK     0xffff00U
#define Fabric_DID_MASK 0xfff000U
#define WELL_KNOWN_DID_MASK 0xfffff0U
#define PT2PT_LocalID	1
#define PT2PT_RemoteID	2
#define FF_DEF_EDTOV          2000
#define FF_DEF_ALTOV            15
#define FF_DEF_RATOV             2
#define FF_DEF_ARBTOV         1900
#define LPFC_BUF_RING0        64
#define FCELSSIZE             1024
#define LPFC_FCP_RING            0
#define LPFC_EXTRA_RING          1
#define LPFC_ELS_RING            2
#define LPFC_FCP_NEXT_RING       3
#define SLI2_IOCB_CMD_R0_ENTRIES    172
#define SLI2_IOCB_RSP_R0_ENTRIES    134
#define SLI2_IOCB_CMD_R1_ENTRIES      4
#define SLI2_IOCB_RSP_R1_ENTRIES      4
#define SLI2_IOCB_CMD_R1XTRA_ENTRIES 36
#define SLI2_IOCB_RSP_R1XTRA_ENTRIES 52
#define SLI2_IOCB_CMD_R2_ENTRIES     20
#define SLI2_IOCB_RSP_R2_ENTRIES     20
#define SLI2_IOCB_CMD_R3_ENTRIES      0
#define SLI2_IOCB_RSP_R3_ENTRIES      0
#define SLI2_IOCB_CMD_R3XTRA_ENTRIES 24
#define SLI2_IOCB_RSP_R3XTRA_ENTRIES 32
#define SLI2_IOCB_CMD_SIZE	32
#define SLI2_IOCB_RSP_SIZE	32
#define SLI3_IOCB_CMD_SIZE	128
#define SLI3_IOCB_RSP_SIZE	64
#define LPFC_UNREG_ALL_RPIS_VPORT	0xffff
#define LPFC_UNREG_ALL_DFLT_RPIS	0xffffffff
#define LPFC_NL_VENDOR_ID (SCSI_NL_VID_TYPE_PCI | PCI_VENDOR_ID_EMULEX)
union CtRevisionId ;
union CtCommandResponse ;
#define FC4_FEATURE_INIT 0x2
#define FC4_FEATURE_TARGET 0x1
struct lpfc_sli_ct_request ;
#define  SLI_CT_REVISION        1
#define  GID_REQUEST_SZ   (offsetof(struct lpfc_sli_ct_request, un) + \
sizeof(struct gid))
#define  GFF_REQUEST_SZ   (offsetof(struct lpfc_sli_ct_request, un) + \
sizeof(struct gff))
#define  RFT_REQUEST_SZ   (offsetof(struct lpfc_sli_ct_request, un) + \
sizeof(struct rft))
#define  RFF_REQUEST_SZ   (offsetof(struct lpfc_sli_ct_request, un) + \
sizeof(struct rff))
#define  RNN_REQUEST_SZ   (offsetof(struct lpfc_sli_ct_request, un) + \
sizeof(struct rnn))
#define  RSNN_REQUEST_SZ  (offsetof(struct lpfc_sli_ct_request, un) + \
sizeof(struct rsnn))
#define DA_ID_REQUEST_SZ (offsetof(struct lpfc_sli_ct_request, un) + \
sizeof(struct da_id))
#define  RSPN_REQUEST_SZ  (offsetof(struct lpfc_sli_ct_request, un) + \
sizeof(struct rspn))
#define  SLI_CT_MANAGEMENT_SERVICE        0xFA
#define  SLI_CT_TIME_SERVICE              0xFB
#define  SLI_CT_DIRECTORY_SERVICE         0xFC
#define  SLI_CT_FABRIC_CONTROLLER_SERVICE 0xFD
#define  SLI_CT_DIRECTORY_NAME_SERVER     0x02
#define  SLI_CT_RESPONSE_FS_RJT           0x8001
#define  SLI_CT_RESPONSE_FS_ACC           0x8002
#define  SLI_CT_NO_ADDITIONAL_EXPL	  0x0
#define  SLI_CT_INVALID_COMMAND           0x01
#define  SLI_CT_INVALID_VERSION           0x02
#define  SLI_CT_LOGICAL_ERROR             0x03
#define  SLI_CT_INVALID_IU_SIZE           0x04
#define  SLI_CT_LOGICAL_BUSY              0x05
#define  SLI_CT_PROTOCOL_ERROR            0x07
#define  SLI_CT_UNABLE_TO_PERFORM_REQ     0x09
#define  SLI_CT_REQ_NOT_SUPPORTED         0x0b
#define  SLI_CT_HBA_INFO_NOT_REGISTERED	  0x10
#define  SLI_CT_MULTIPLE_HBA_ATTR_OF_SAME_TYPE  0x11
#define  SLI_CT_INVALID_HBA_ATTR_BLOCK_LEN      0x12
#define  SLI_CT_HBA_ATTR_NOT_PRESENT	  0x13
#define  SLI_CT_PORT_INFO_NOT_REGISTERED  0x20
#define  SLI_CT_MULTIPLE_PORT_ATTR_OF_SAME_TYPE 0x21
#define  SLI_CT_INVALID_PORT_ATTR_BLOCK_LEN     0x22
#define  SLI_CT_VENDOR_UNIQUE             0xff
#define  SLI_CT_NO_PORT_ID                0x01
#define  SLI_CT_NO_PORT_NAME              0x02
#define  SLI_CT_NO_NODE_NAME              0x03
#define  SLI_CT_NO_CLASS_OF_SERVICE       0x04
#define  SLI_CT_NO_IP_ADDRESS             0x05
#define  SLI_CT_NO_IPA                    0x06
#define  SLI_CT_NO_FC4_TYPES              0x07
#define  SLI_CT_NO_SYMBOLIC_PORT_NAME     0x08
#define  SLI_CT_NO_SYMBOLIC_NODE_NAME     0x09
#define  SLI_CT_NO_PORT_TYPE              0x0A
#define  SLI_CT_ACCESS_DENIED             0x10
#define  SLI_CT_INVALID_PORT_ID           0x11
#define  SLI_CT_DATABASE_EMPTY            0x12
#define  SLI_CTNS_GA_NXT      0x0100
#define  SLI_CTNS_GPN_ID      0x0112
#define  SLI_CTNS_GNN_ID      0x0113
#define  SLI_CTNS_GCS_ID      0x0114
#define  SLI_CTNS_GFT_ID      0x0117
#define  SLI_CTNS_GSPN_ID     0x0118
#define  SLI_CTNS_GPT_ID      0x011A
#define  SLI_CTNS_GFF_ID      0x011F
#define  SLI_CTNS_GID_PN      0x0121
#define  SLI_CTNS_GID_NN      0x0131
#define  SLI_CTNS_GIP_NN      0x0135
#define  SLI_CTNS_GIPA_NN     0x0136
#define  SLI_CTNS_GSNN_NN     0x0139
#define  SLI_CTNS_GNN_IP      0x0153
#define  SLI_CTNS_GIPA_IP     0x0156
#define  SLI_CTNS_GID_FT      0x0171
#define  SLI_CTNS_GID_PT      0x01A1
#define  SLI_CTNS_RPN_ID      0x0212
#define  SLI_CTNS_RNN_ID      0x0213
#define  SLI_CTNS_RCS_ID      0x0214
#define  SLI_CTNS_RFT_ID      0x0217
#define  SLI_CTNS_RSPN_ID     0x0218
#define  SLI_CTNS_RPT_ID      0x021A
#define  SLI_CTNS_RFF_ID      0x021F
#define  SLI_CTNS_RIP_NN      0x0235
#define  SLI_CTNS_RIPA_NN     0x0236
#define  SLI_CTNS_RSNN_NN     0x0239
#define  SLI_CTNS_DA_ID       0x0300
#define  SLI_CTPT_N_PORT      0x01
#define  SLI_CTPT_NL_PORT     0x02
#define  SLI_CTPT_FNL_PORT    0x03
#define  SLI_CTPT_IP          0x04
#define  SLI_CTPT_FCP         0x08
#define  SLI_CTPT_NX_PORT     0x7F
#define  SLI_CTPT_F_PORT      0x81
#define  SLI_CTPT_FL_PORT     0x82
#define  SLI_CTPT_E_PORT      0x84
#define SLI_CT_LAST_ENTRY     0x80000000
#define FC_PH_4_0   6
#define FC_PH_4_1   7
#define FC_PH_4_2   8
#define FC_PH_4_3   9
#define FC_PH_LOW   8
#define FC_PH_HIGH  9
#define FC_PH3   0x20
#define FF_FRAME_SIZE     2048
struct lpfc_name ;
struct csp ;
struct class_parms ;
struct serv_parm ;
struct fc_vft_header ;
#define ELS_CMD_MASK      0xffff0000
#define ELS_RSP_MASK      0xff000000
#define ELS_CMD_LS_RJT    0x01000000
#define ELS_CMD_ACC       0x02000000
#define ELS_CMD_PLOGI     0x03000000
#define ELS_CMD_FLOGI     0x04000000
#define ELS_CMD_LOGO      0x05000000
#define ELS_CMD_ABTX      0x06000000
#define ELS_CMD_RCS       0x07000000
#define ELS_CMD_RES       0x08000000
#define ELS_CMD_RSS       0x09000000
#define ELS_CMD_RSI       0x0A000000
#define ELS_CMD_ESTS      0x0B000000
#define ELS_CMD_ESTC      0x0C000000
#define ELS_CMD_ADVC      0x0D000000
#define ELS_CMD_RTV       0x0E000000
#define ELS_CMD_RLS       0x0F000000
#define ELS_CMD_ECHO      0x10000000
#define ELS_CMD_TEST      0x11000000
#define ELS_CMD_RRQ       0x12000000
#define ELS_CMD_PRLI      0x20100014
#define ELS_CMD_PRLO      0x21100014
#define ELS_CMD_PRLO_ACC  0x02100014
#define ELS_CMD_PDISC     0x50000000
#define ELS_CMD_FDISC     0x51000000
#define ELS_CMD_ADISC     0x52000000
#define ELS_CMD_FARP      0x54000000
#define ELS_CMD_FARPR     0x55000000
#define ELS_CMD_RPS       0x56000000
#define ELS_CMD_RPL       0x57000000
#define ELS_CMD_FAN       0x60000000
#define ELS_CMD_RSCN      0x61040000
#define ELS_CMD_SCR       0x62000000
#define ELS_CMD_RNID      0x78000000
#define ELS_CMD_LIRR      0x7A000000
#define ELS_CMD_MASK      0xffff
#define ELS_RSP_MASK      0xff
#define ELS_CMD_LS_RJT    0x01
#define ELS_CMD_ACC       0x02
#define ELS_CMD_PLOGI     0x03
#define ELS_CMD_FLOGI     0x04
#define ELS_CMD_LOGO      0x05
#define ELS_CMD_ABTX      0x06
#define ELS_CMD_RCS       0x07
#define ELS_CMD_RES       0x08
#define ELS_CMD_RSS       0x09
#define ELS_CMD_RSI       0x0A
#define ELS_CMD_ESTS      0x0B
#define ELS_CMD_ESTC      0x0C
#define ELS_CMD_ADVC      0x0D
#define ELS_CMD_RTV       0x0E
#define ELS_CMD_RLS       0x0F
#define ELS_CMD_ECHO      0x10
#define ELS_CMD_TEST      0x11
#define ELS_CMD_RRQ       0x12
#define ELS_CMD_PRLI      0x14001020
#define ELS_CMD_PRLO      0x14001021
#define ELS_CMD_PRLO_ACC  0x14001002
#define ELS_CMD_PDISC     0x50
#define ELS_CMD_FDISC     0x51
#define ELS_CMD_ADISC     0x52
#define ELS_CMD_FARP      0x54
#define ELS_CMD_FARPR     0x55
#define ELS_CMD_RPS       0x56
#define ELS_CMD_RPL       0x57
#define ELS_CMD_FAN       0x60
#define ELS_CMD_RSCN      0x0461
#define ELS_CMD_SCR       0x62
#define ELS_CMD_RNID      0x78
#define ELS_CMD_LIRR      0x7A
struct ls_rjt ;
typedef struct _LOGO  LOGO;
#define PRLX_PAGE_LEN   0x10
#define TPRLO_PAGE_LEN  0x14
typedef struct _PRLI  PRLI;
typedef struct _PRLO  PRLO;
typedef struct _ADISC  ADISC;
typedef struct _FARP  FARP;
typedef struct _FAN  FAN;
typedef struct _SCR  SCR;
typedef struct _RNID_TOP_DISC  RNID_TOP_DISC;
typedef struct _RNID  RNID;
typedef struct  _RPS  RPS;
typedef struct  _RPS_RSP  RPS_RSP;
struct RLS ;
struct  RLS_RSP ;
struct RRQ ;
#define LPFC_MAX_VFN_PER_PFN	255
#define LPFC_DEF_VFN_PER_PFN	0
struct RTV_RSP ;
typedef struct  _RPL  RPL;
typedef struct  _PORT_NUM_BLK  PORT_NUM_BLK;
typedef struct  _RPL_RSP  RPL_RSP;
typedef struct _D_ID  D_ID;
#define RSCN_ADDRESS_FORMAT_PORT	0x0
#define RSCN_ADDRESS_FORMAT_AREA	0x1
#define RSCN_ADDRESS_FORMAT_DOMAIN	0x2
#define RSCN_ADDRESS_FORMAT_FABRIC	0x3
#define RSCN_ADDRESS_FORMAT_MASK	0x3
typedef struct _ELS_PKT  ELS_PKT;
#define  SLI_MGMT_GRHL     0x100
#define  SLI_MGMT_GHAT     0x101
#define  SLI_MGMT_GRPL     0x102
#define  SLI_MGMT_GPAT     0x110
#define  SLI_MGMT_RHBA     0x200
#define  SLI_MGMT_RHAT     0x201
#define  SLI_MGMT_RPRT     0x210
#define  SLI_MGMT_RPA      0x211
#define  SLI_MGMT_DHBA     0x300
#define  SLI_MGMT_DPRT     0x310
#define  SLI_CT_FDMI_Subtypes     0x10
#define  REJECT_CODE             0x9
#define  NODE_NAME               0x1
#define  MANUFACTURER            0x2
#define  SERIAL_NUMBER           0x3
#define  MODEL                   0x4
#define  MODEL_DESCRIPTION       0x5
#define  HARDWARE_VERSION        0x6
#define  DRIVER_VERSION          0x7
#define  OPTION_ROM_VERSION      0x8
#define  FIRMWARE_VERSION        0x9
#define  OS_NAME_VERSION	 0xa
#define  MAX_CT_PAYLOAD_LEN	 0xb
#define  SUPPORTED_FC4_TYPES     0x1
#define  SUPPORTED_SPEED         0x2
#define  PORT_SPEED              0x3
#define  MAX_FRAME_SIZE          0x4
#define  OS_DEVICE_NAME          0x5
#define  HOST_NAME               0x6
union AttributesDef ;
typedef struct  ATTRIBUTE_ENTRY;
typedef struct  ATTRIBUTE_BLOCK;
typedef struct  PORT_ENTRY;
typedef struct  HBA_IDENTIFIER;
typedef struct  REG_PORT_LIST;
typedef struct  REG_HBA;
typedef struct  REG_HBA_ATTRIBUTE;
typedef struct  REG_PORT_ATTRIBUTE;
typedef struct  GRHL_ACC_PAYLOAD;
typedef struct  GRPL_ACC_PAYLOAD;
typedef struct  GPAT_ACC_PAYLOAD;
#define MAX_CONFIGURED_RINGS     3
#define MAX_RINGS                4
#define OWN_CHIP        1
#define OWN_HOST        0
#define IOCB_WORD_SZ    8
#define FC_NET_HDR      0x20
#define PCI_VENDOR_ID_EMULEX        0x10df
#define PCI_DEVICE_ID_FIREFLY       0x1ae5
#define PCI_DEVICE_ID_PROTEUS_VF    0xe100
#define PCI_DEVICE_ID_BALIUS        0xe131
#define PCI_DEVICE_ID_PROTEUS_PF    0xe180
#define PCI_DEVICE_ID_LANCER_FC     0xe200
#define PCI_DEVICE_ID_LANCER_FC_VF  0xe208
#define PCI_DEVICE_ID_LANCER_FCOE   0xe260
#define PCI_DEVICE_ID_LANCER_FCOE_VF 0xe268
#define PCI_DEVICE_ID_SAT_SMB       0xf011
#define PCI_DEVICE_ID_SAT_MID       0xf015
#define PCI_DEVICE_ID_RFLY          0xf095
#define PCI_DEVICE_ID_PFLY          0xf098
#define PCI_DEVICE_ID_LP101         0xf0a1
#define PCI_DEVICE_ID_TFLY          0xf0a5
#define PCI_DEVICE_ID_BSMB          0xf0d1
#define PCI_DEVICE_ID_BMID          0xf0d5
#define PCI_DEVICE_ID_ZSMB          0xf0e1
#define PCI_DEVICE_ID_ZMID          0xf0e5
#define PCI_DEVICE_ID_NEPTUNE       0xf0f5
#define PCI_DEVICE_ID_NEPTUNE_SCSP  0xf0f6
#define PCI_DEVICE_ID_NEPTUNE_DCSP  0xf0f7
#define PCI_DEVICE_ID_SAT           0xf100
#define PCI_DEVICE_ID_SAT_SCSP      0xf111
#define PCI_DEVICE_ID_SAT_DCSP      0xf112
#define PCI_DEVICE_ID_FALCON        0xf180
#define PCI_DEVICE_ID_SUPERFLY      0xf700
#define PCI_DEVICE_ID_DRAGONFLY     0xf800
#define PCI_DEVICE_ID_CENTAUR       0xf900
#define PCI_DEVICE_ID_PEGASUS       0xf980
#define PCI_DEVICE_ID_THOR          0xfa00
#define PCI_DEVICE_ID_VIPER         0xfb00
#define PCI_DEVICE_ID_LP10000S      0xfc00
#define PCI_DEVICE_ID_LP11000S      0xfc10
#define PCI_DEVICE_ID_LPE11000S     0xfc20
#define PCI_DEVICE_ID_SAT_S         0xfc40
#define PCI_DEVICE_ID_PROTEUS_S     0xfc50
#define PCI_DEVICE_ID_HELIOS        0xfd00
#define PCI_DEVICE_ID_HELIOS_SCSP   0xfd11
#define PCI_DEVICE_ID_HELIOS_DCSP   0xfd12
#define PCI_DEVICE_ID_ZEPHYR        0xfe00
#define PCI_DEVICE_ID_HORNET        0xfe05
#define PCI_DEVICE_ID_ZEPHYR_SCSP   0xfe11
#define PCI_DEVICE_ID_ZEPHYR_DCSP   0xfe12
#define PCI_VENDOR_ID_SERVERENGINE  0x19a2
#define PCI_DEVICE_ID_TIGERSHARK    0x0704
#define PCI_DEVICE_ID_TOMCAT        0x0714
#define JEDEC_ID_ADDRESS            0x0080001c
#define FIREFLY_JEDEC_ID            0x1ACC
#define SUPERFLY_JEDEC_ID           0x0020
#define DRAGONFLY_JEDEC_ID          0x0021
#define DRAGONFLY_V2_JEDEC_ID       0x0025
#define CENTAUR_2G_JEDEC_ID         0x0026
#define CENTAUR_1G_JEDEC_ID         0x0028
#define PEGASUS_ORION_JEDEC_ID      0x0036
#define PEGASUS_JEDEC_ID            0x0038
#define THOR_JEDEC_ID               0x0012
#define HELIOS_JEDEC_ID             0x0364
#define ZEPHYR_JEDEC_ID             0x0577
#define VIPER_JEDEC_ID              0x4838
#define SATURN_JEDEC_ID             0x1004
#define HORNET_JDEC_ID              0x2057706D
#define JEDEC_ID_MASK               0x0FFFF000
#define JEDEC_ID_SHIFT              12
#define FC_JEDEC_ID(id)             ((id & JEDEC_ID_MASK) >> JEDEC_ID_SHIFT)
typedef struct  FF_REGS;
#define FF_REG_AREA_SIZE       256
#define HA_REG_OFFSET  0
#define HA_R0RE_REQ    0x00000001
#define HA_R0CE_RSP    0x00000002
#define HA_R0ATT       0x00000008
#define HA_R1RE_REQ    0x00000010
#define HA_R1CE_RSP    0x00000020
#define HA_R1ATT       0x00000080
#define HA_R2RE_REQ    0x00000100
#define HA_R2CE_RSP    0x00000200
#define HA_R2ATT       0x00000800
#define HA_R3RE_REQ    0x00001000
#define HA_R3CE_RSP    0x00002000
#define HA_R3ATT       0x00008000
#define HA_LATT        0x20000000
#define HA_MBATT       0x40000000
#define HA_ERATT       0x80000000
#define HA_RXRE_REQ    0x00000001
#define HA_RXCE_RSP    0x00000002
#define HA_RXATT       0x00000008
#define HA_RXMASK      0x0000000f
#define HA_R0_CLR_MSK	(HA_R0RE_REQ | HA_R0CE_RSP | HA_R0ATT)
#define HA_R1_CLR_MSK	(HA_R1RE_REQ | HA_R1CE_RSP | HA_R1ATT)
#define HA_R2_CLR_MSK	(HA_R2RE_REQ | HA_R2CE_RSP | HA_R2ATT)
#define HA_R3_CLR_MSK	(HA_R3RE_REQ | HA_R3CE_RSP | HA_R3ATT)
#define HA_R0_POS	3
#define HA_R1_POS	7
#define HA_R2_POS	11
#define HA_R3_POS	15
#define HA_LE_POS	29
#define HA_MB_POS	30
#define HA_ER_POS	31
#define CA_REG_OFFSET  4
#define CA_R0CE_REQ    0x00000001
#define CA_R0RE_RSP    0x00000002
#define CA_R0ATT       0x00000008
#define CA_R1CE_REQ    0x00000010
#define CA_R1RE_RSP    0x00000020
#define CA_R1ATT       0x00000080
#define CA_R2CE_REQ    0x00000100
#define CA_R2RE_RSP    0x00000200
#define CA_R2ATT       0x00000800
#define CA_R3CE_REQ    0x00001000
#define CA_R3RE_RSP    0x00002000
#define CA_R3ATT       0x00008000
#define CA_MBATT       0x40000000
#define HS_REG_OFFSET  8
#define HS_MBRDY       0x00400000
#define HS_FFRDY       0x00800000
#define HS_FFER8       0x01000000
#define HS_FFER7       0x02000000
#define HS_FFER6       0x04000000
#define HS_FFER5       0x08000000
#define HS_FFER4       0x10000000
#define HS_FFER3       0x20000000
#define HS_FFER2       0x40000000
#define HS_FFER1       0x80000000
#define HS_CRIT_TEMP   0x00000100
#define HS_FFERM       0xFF000100
#define UNPLUG_ERR     0x00000001
#define HC_REG_OFFSET  12
#define HC_MBINT_ENA   0x00000001
#define HC_R0INT_ENA   0x00000002
#define HC_R1INT_ENA   0x00000004
#define HC_R2INT_ENA   0x00000008
#define HC_R3INT_ENA   0x00000010
#define HC_INITHBI     0x02000000
#define HC_INITMB      0x04000000
#define HC_INITFF      0x08000000
#define HC_LAINT_ENA   0x20000000
#define HC_ERINT_ENA   0x80000000
#define MSIX_DFLT_ID	0
#define MSIX_RNG0_ID	0
#define MSIX_RNG1_ID	1
#define MSIX_RNG2_ID	2
#define MSIX_RNG3_ID	3
#define MSIX_LINK_ID	4
#define MSIX_MBOX_ID	5
#define MSIX_SPARE0_ID	6
#define MSIX_SPARE1_ID	7
#define MBX_SHUTDOWN        0x00
#define MBX_LOAD_SM         0x01
#define MBX_READ_NV         0x02
#define MBX_WRITE_NV        0x03
#define MBX_RUN_BIU_DIAG    0x04
#define MBX_INIT_LINK       0x05
#define MBX_DOWN_LINK       0x06
#define MBX_CONFIG_LINK     0x07
#define MBX_CONFIG_RING     0x09
#define MBX_RESET_RING      0x0A
#define MBX_READ_CONFIG     0x0B
#define MBX_READ_RCONFIG    0x0C
#define MBX_READ_SPARM      0x0D
#define MBX_READ_STATUS     0x0E
#define MBX_READ_RPI        0x0F
#define MBX_READ_XRI        0x10
#define MBX_READ_REV        0x11
#define MBX_READ_LNK_STAT   0x12
#define MBX_REG_LOGIN       0x13
#define MBX_UNREG_LOGIN     0x14
#define MBX_CLEAR_LA        0x16
#define MBX_DUMP_MEMORY     0x17
#define MBX_DUMP_CONTEXT    0x18
#define MBX_RUN_DIAGS       0x19
#define MBX_RESTART         0x1A
#define MBX_UPDATE_CFG      0x1B
#define MBX_DOWN_LOAD       0x1C
#define MBX_DEL_LD_ENTRY    0x1D
#define MBX_RUN_PROGRAM     0x1E
#define MBX_SET_MASK        0x20
#define MBX_SET_VARIABLE    0x21
#define MBX_UNREG_D_ID      0x23
#define MBX_KILL_BOARD      0x24
#define MBX_CONFIG_FARP     0x25
#define MBX_BEACON          0x2A
#define MBX_CONFIG_MSI      0x30
#define MBX_HEARTBEAT       0x31
#define MBX_WRITE_VPARMS    0x32
#define MBX_ASYNCEVT_ENABLE 0x33
#define MBX_READ_EVENT_LOG_STATUS 0x37
#define MBX_READ_EVENT_LOG  0x38
#define MBX_WRITE_EVENT_LOG 0x39
#define MBX_PORT_CAPABILITIES 0x3B
#define MBX_PORT_IOV_CONTROL 0x3C
#define MBX_CONFIG_HBQ	    0x7C
#define MBX_LOAD_AREA       0x81
#define MBX_RUN_BIU_DIAG64  0x84
#define MBX_CONFIG_PORT     0x88
#define MBX_READ_SPARM64    0x8D
#define MBX_READ_RPI64      0x8F
#define MBX_REG_LOGIN64     0x93
#define MBX_READ_TOPOLOGY   0x95
#define MBX_REG_VPI	    0x96
#define MBX_UNREG_VPI	    0x97
#define MBX_WRITE_WWN       0x98
#define MBX_SET_DEBUG       0x99
#define MBX_LOAD_EXP_ROM    0x9C
#define MBX_SLI4_CONFIG	    0x9B
#define MBX_SLI4_REQ_FTRS   0x9D
#define MBX_MAX_CMDS        0x9E
#define MBX_RESUME_RPI      0x9E
#define MBX_SLI2_CMD_MASK   0x80
#define MBX_REG_VFI         0x9F
#define MBX_REG_FCFI        0xA0
#define MBX_UNREG_VFI       0xA1
#define MBX_UNREG_FCFI	    0xA2
#define MBX_INIT_VFI        0xA3
#define MBX_INIT_VPI        0xA4
#define MBX_AUTH_PORT       0xF8
#define MBX_SECURITY_MGMT   0xF9
#define CMD_RCV_SEQUENCE_CX     0x01
#define CMD_XMIT_SEQUENCE_CR    0x02
#define CMD_XMIT_SEQUENCE_CX    0x03
#define CMD_XMIT_BCAST_CN       0x04
#define CMD_XMIT_BCAST_CX       0x05
#define CMD_QUE_RING_BUF_CN     0x06
#define CMD_QUE_XRI_BUF_CX      0x07
#define CMD_IOCB_CONTINUE_CN    0x08
#define CMD_RET_XRI_BUF_CX      0x09
#define CMD_ELS_REQUEST_CR      0x0A
#define CMD_ELS_REQUEST_CX      0x0B
#define CMD_RCV_ELS_REQ_CX      0x0D
#define CMD_ABORT_XRI_CN        0x0E
#define CMD_ABORT_XRI_CX        0x0F
#define CMD_CLOSE_XRI_CN        0x10
#define CMD_CLOSE_XRI_CX        0x11
#define CMD_CREATE_XRI_CR       0x12
#define CMD_CREATE_XRI_CX       0x13
#define CMD_GET_RPI_CN          0x14
#define CMD_XMIT_ELS_RSP_CX     0x15
#define CMD_GET_RPI_CR          0x16
#define CMD_XRI_ABORTED_CX      0x17
#define CMD_FCP_IWRITE_CR       0x18
#define CMD_FCP_IWRITE_CX       0x19
#define CMD_FCP_IREAD_CR        0x1A
#define CMD_FCP_IREAD_CX        0x1B
#define CMD_FCP_ICMND_CR        0x1C
#define CMD_FCP_ICMND_CX        0x1D
#define CMD_FCP_TSEND_CX        0x1F
#define CMD_FCP_TRECEIVE_CX     0x21
#define CMD_FCP_TRSP_CX	        0x23
#define CMD_FCP_AUTO_TRSP_CX    0x29
#define CMD_ADAPTER_MSG         0x20
#define CMD_ADAPTER_DUMP        0x22
#define CMD_ASYNC_STATUS        0x7C
#define CMD_RCV_SEQUENCE64_CX   0x81
#define CMD_XMIT_SEQUENCE64_CR  0x82
#define CMD_XMIT_SEQUENCE64_CX  0x83
#define CMD_XMIT_BCAST64_CN     0x84
#define CMD_XMIT_BCAST64_CX     0x85
#define CMD_QUE_RING_BUF64_CN   0x86
#define CMD_QUE_XRI_BUF64_CX    0x87
#define CMD_IOCB_CONTINUE64_CN  0x88
#define CMD_RET_XRI_BUF64_CX    0x89
#define CMD_ELS_REQUEST64_CR    0x8A
#define CMD_ELS_REQUEST64_CX    0x8B
#define CMD_ABORT_MXRI64_CN     0x8C
#define CMD_RCV_ELS_REQ64_CX    0x8D
#define CMD_XMIT_ELS_RSP64_CX   0x95
#define CMD_XMIT_BLS_RSP64_CX   0x97
#define CMD_FCP_IWRITE64_CR     0x98
#define CMD_FCP_IWRITE64_CX     0x99
#define CMD_FCP_IREAD64_CR      0x9A
#define CMD_FCP_IREAD64_CX      0x9B
#define CMD_FCP_ICMND64_CR      0x9C
#define CMD_FCP_ICMND64_CX      0x9D
#define CMD_FCP_TSEND64_CX      0x9F
#define CMD_FCP_TRECEIVE64_CX   0xA1
#define CMD_FCP_TRSP64_CX       0xA3
#define CMD_QUE_XRI64_CX	0xB3
#define CMD_IOCB_RCV_SEQ64_CX	0xB5
#define CMD_IOCB_RCV_ELS64_CX	0xB7
#define CMD_IOCB_RET_XRI64_CX	0xB9
#define CMD_IOCB_RCV_CONT64_CX	0xBB
#define CMD_GEN_REQUEST64_CR    0xC2
#define CMD_GEN_REQUEST64_CX    0xC3
#define CMD_IOCB_XMIT_MSEQ64_CR		0xB0
#define CMD_IOCB_XMIT_MSEQ64_CX		0xB1
#define CMD_IOCB_RCV_SEQ_LIST64_CX	0xC1
#define CMD_IOCB_RCV_ELS_LIST64_CX	0xCD
#define CMD_IOCB_CLOSE_EXTENDED_CN	0xB6
#define CMD_IOCB_ABORT_EXTENDED_CN	0xBA
#define CMD_IOCB_RET_HBQE64_CN		0xCA
#define CMD_IOCB_FCP_IBIDIR64_CR	0xAC
#define CMD_IOCB_FCP_IBIDIR64_CX	0xAD
#define CMD_IOCB_FCP_ITASKMGT64_CX	0xAF
#define CMD_IOCB_LOGENTRY_CN		0x94
#define CMD_IOCB_LOGENTRY_ASYNC_CN	0x96
#define DSSCMD_IWRITE64_CR		0xF8
#define DSSCMD_IWRITE64_CX		0xF9
#define DSSCMD_IREAD64_CR		0xFA
#define DSSCMD_IREAD64_CX		0xFB
#define CMD_MAX_IOCB_CMD        0xFB
#define CMD_IOCB_MASK           0xff
#define MAX_MSG_DATA            28
#define LPFC_MAX_ADPTMSG         32
#define MBX_SUCCESS                 0
#define MBXERR_NUM_RINGS            1
#define MBXERR_NUM_IOCBS            2
#define MBXERR_IOCBS_EXCEEDED       3
#define MBXERR_BAD_RING_NUMBER      4
#define MBXERR_MASK_ENTRIES_RANGE   5
#define MBXERR_MASKS_EXCEEDED       6
#define MBXERR_BAD_PROFILE          7
#define MBXERR_BAD_DEF_CLASS        8
#define MBXERR_BAD_MAX_RESPONDER    9
#define MBXERR_BAD_MAX_ORIGINATOR   10
#define MBXERR_RPI_REGISTERED       11
#define MBXERR_RPI_FULL             12
#define MBXERR_NO_RESOURCES         13
#define MBXERR_BAD_RCV_LENGTH       14
#define MBXERR_DMA_ERROR            15
#define MBXERR_ERROR                16
#define MBXERR_LINK_DOWN            0x33
#define MBXERR_SEC_NO_PERMISSION    0xF02
#define MBX_NOT_FINISHED            255
#define MBX_BUSY                   0xffffff
#define MBX_TIMEOUT                0xfffffe
#define TEMPERATURE_OFFSET 0xB0
typedef struct  RR_REG;
struct ulp_bde ;
typedef struct ULP_BDL  ULP_BDL;
enum lpfc_protgrp_type ;
#define LPFC_PDE5_DESCRIPTOR		0x85
#define LPFC_PDE6_DESCRIPTOR		0x86
#define LPFC_PDE7_DESCRIPTOR		0x87
#define BG_OP_IN_NODIF_OUT_CRC		0x0
#define	BG_OP_IN_CRC_OUT_NODIF		0x1
#define	BG_OP_IN_NODIF_OUT_CSUM		0x2
#define	BG_OP_IN_CSUM_OUT_NODIF		0x3
#define	BG_OP_IN_CRC_OUT_CRC		0x4
#define	BG_OP_IN_CSUM_OUT_CSUM		0x5
#define	BG_OP_IN_CRC_OUT_CSUM		0x6
#define	BG_OP_IN_CSUM_OUT_CRC		0x7
struct lpfc_pde5 ;
struct lpfc_pde6 ;
struct lpfc_pde7 ;
typedef struct  LOAD_SM_VAR;
typedef struct  READ_NV_VAR;
typedef struct  WRITE_NV_VAR;
typedef struct  BIU_DIAG_VAR;
struct READ_EVENT_LOG_VAR ;
typedef struct  INIT_LINK_VAR;
typedef struct  DOWN_LINK_VAR;
typedef struct  CONFIG_LINK;
typedef struct  RING_DEF;
typedef struct  PART_SLIM_VAR;
typedef struct  CONFIG_RING_VAR;
typedef struct  RESET_RING_VAR;
typedef struct  READ_CONFIG_VAR;
typedef struct  READ_RCONF_VAR;
typedef struct  READ_SPARM_VAR;
typedef struct  READ_STATUS_VAR;
typedef struct  READ_RPI_VAR;
typedef struct  READ_XRI_VAR;
typedef struct  READ_REV_VAR;
typedef struct  READ_LNK_VAR;
typedef struct  REG_LOGIN_VAR;
typedef union  REG_WD30;
typedef struct  UNREG_LOGIN_VAR;
typedef struct  REG_VPI_VAR;
typedef struct  UNREG_VPI_VAR;
typedef struct  UNREG_D_ID_VAR;
struct lpfc_mbx_read_top ;
typedef struct  CLEAR_LA_VAR;
typedef struct  DUMP_VAR;
#define  DMP_MEM_REG             0x1
#define  DMP_NV_PARAMS           0x2
#define  DMP_REGION_VPD          0xe
#define  DMP_VPD_SIZE            0x400
#define  DMP_RSP_OFFSET          0x14
#define  DMP_RSP_SIZE            0x6C
#define  DMP_REGION_VPORT	 0x16
#define  DMP_VPORT_REGION_SIZE	 0x200
#define  DMP_MBOX_OFFSET_WORD	 0x5
#define  DMP_REGION_23		 0x17
#define  DMP_RGN23_SIZE		 0x400
#define  WAKE_UP_PARMS_REGION_ID    4
#define  WAKE_UP_PARMS_WORD_SIZE   15
struct vport_rec ;
#define VPORT_INFO_SIG 0x32324752
#define VPORT_INFO_REV_MASK 0xff
#define VPORT_INFO_REV 0x1
#define MAX_STATIC_VPORT_COUNT 16
struct static_vport_info ;
struct prog_id ;
struct update_cfg_var ;
struct hbq_mask ;
struct config_hbq_var ;
typedef struct  CONFIG_PORT_VAR;
struct config_msi_var ;
#define SLIMOFF 0x30
typedef struct _SLI2_RDSC  SLI2_RDSC;
typedef struct _PCB  PCB_t;
typedef struct  CONFIG_FARP_VAR;
typedef struct  ASYNCEVT_ENABLE_VAR;
#define MAILBOX_CMD_WSIZE	32
#define MAILBOX_CMD_SIZE	(MAILBOX_CMD_WSIZE * sizeof(uint32_t))
#define MAILBOX_EXT_WSIZE	512
#define MAILBOX_EXT_SIZE	(MAILBOX_EXT_WSIZE * sizeof(uint32_t))
#define MAILBOX_HBA_EXT_OFFSET  0x100
#define MAILBOX_SYSFS_MAX	4096
typedef union  MAILVARIANTS;
struct lpfc_hgp ;
struct lpfc_pgp ;
struct sli2_desc ;
struct sli3_desc ;
struct sli3_pgp ;
union sli_var ;
typedef struct  MAILBOX_t;
typedef struct  PARM_ERR;
typedef union  WORD5;
typedef struct  GENERIC_RSP;
typedef struct  XR_SEQ_FIELDS;
typedef struct  ELS_REQUEST;
typedef struct  RCV_ELS_REQ;
typedef struct  AC_XRI;
typedef struct  A_MXRI64;
typedef struct  GET_RPI;
typedef struct  FCPI_FIELDS;
typedef struct  FCPT_FIELDS;
typedef struct  XMT_SEQ_FIELDS64;
typedef struct  RCV_SEQ_FIELDS64;
typedef struct  ELS_REQUEST64;
typedef struct  GEN_REQUEST64;
typedef struct  RCV_ELS_REQ64;
struct rcv_seq64 ;
typedef struct  FCPI_FIELDS64;
typedef struct  FCPT_FIELDS64;
typedef struct  ASYNCSTAT_FIELDS;
#define ASYNC_TEMP_WARN		0x100
#define ASYNC_TEMP_SAFE		0x101
struct rcv_sli3 ;
struct lpfc_hbq_entry ;
typedef struct  QUE_XRI64_CX_FIELDS;
struct que_xri64cx_ext_fields ;
struct sli3_bg_fields ;
static inline uint32_t
lpfc_bgs_get_bidir_bg_prof(uint32_t bgstat)
static inline uint32_t
lpfc_bgs_get_bidir_err_cond(uint32_t bgstat)
static inline uint32_t
lpfc_bgs_get_bg_prof(uint32_t bgstat)
static inline uint32_t
lpfc_bgs_get_invalid_prof(uint32_t bgstat)
static inline uint32_t
lpfc_bgs_get_uninit_dif_block(uint32_t bgstat)
static inline uint32_t
lpfc_bgs_get_hi_water_mark_present(uint32_t bgstat)
static inline uint32_t
lpfc_bgs_get_reftag_err(uint32_t bgstat)
static inline uint32_t
lpfc_bgs_get_apptag_err(uint32_t bgstat)
static inline uint32_t
lpfc_bgs_get_guard_err(uint32_t bgstat)
#define LPFC_EXT_DATA_BDE_COUNT 3
struct fcp_irw_ext ;
typedef struct _IOCB  IOCB_t;
#define SLI1_SLIM_SIZE   (4 * 1024)
#define SLI2_SLIM_SIZE   (64 * 1024)
#define MAX_SLI2_IOCB    498
#define MAX_SLIM_IOCB_SIZE (SLI2_SLIM_SIZE - \
(sizeof(MAILBOX_t) + sizeof(PCB_t) + \
sizeof(uint32_t) * MAILBOX_EXT_WSIZE))
#define LPFC_TOTAL_HBQ_SIZE (sizeof(struct lpfc_hbq_entry) *  \
lpfc_sli_hbq_count())
struct lpfc_sli2_slim ;
static inline int
lpfc_is_LC_HBA(unsigned short device)
static inline int
lpfc_error_lost_link(IOCB_t *iocbp)
#define MENLO_TRANSPORT_TYPE 0xfe
#define MENLO_CONTEXT 0
#define MENLO_PU 3
#define MENLO_TIMEOUT 30
#define SETVAR_MLOMNT 0x103107
#define SETVAR_MLORST 0x103007
#define BPL_ALIGN_SZ 8
