--- test/date.test
+++ test/date.test
@@ -500,6 +500,11 @@
# Put a floating point number in the database so that we can manipulate
# raw bits using the hexio interface.
#
+# These tests do not work with Berkeley DB because the records are
+# a different format.  The tests cannot be excluded without causing
+# the test to crash so they are commented out instead. [#17990]
+#
+if
# Verify that multiple calls to date functions with 'now' return the
# same answer.
--- test/incrblob.test
+++ test/incrblob.test
@@ -135,8 +135,8 @@
INSERT INTO blobs VALUES('one', $::str || randstr(500,500), 45);
COMMIT;
}
-    expr [file size test.db]/1024
-  } [expr 31 + $AutoVacuumMode]
+  }
+
ifcapable autovacuum {
do_test incrblob-2.$AutoVacuumMode.2 {
--- test/manydb.test
+++ test/manydb.test
@@ -67,6 +67,7 @@
for    {
do_test manydb-1.$i {
sqlite3 db$i $dbname($i)
+    execsql  db$i
execsql
-    forcecopy test.db testA.db
-    forcecopy test.db-journal testA.db-journal
+    #forcecopy test.db testA.db
+    #forcecopy test.db-journal testA.db-journal
execsql
@@ -99,27 +99,30 @@
# file system. This block adds a master-journal file pointer to the
# end of testA.db-journal. The master-journal file does not exist.
#
-  set mj [file normalize testA.db-mj-123]
-  binary scan $mj c* a
-  set cksum 0
-  foreach i $a
-  set mj_pgno [expr $sqlite_pending_byte / 1024]
-  set zAppend [binary format Ia*IIa8 $mj_pgno $mj [string length $mj] $cksum \
+  # db-journal is a directory instead of a file in Berkeley DB, so this
+  # code must be commented out or it will cause a crash. [#17990]
+  #
+  #set mj [file normalize testA.db-mj-123]
+  #binary scan $mj c* a
+  #set cksum 0
+  #foreach i $a
+  #set mj_pgno [expr $sqlite_pending_byte / 1024]
+  #set zAppend [binary format Ia*IIa8 $mj_pgno $mj [string length $mj] $cksum \
"\xd9\xd5\x05\xf9\x20\xa1\x63\xd7"
-  ]
-  set iOffset [expr (([file size testA.db-journal] + 511)/512)*512]
-  set fd [open testA.db-journal a+]
-  fconfigure $fd -encoding binary -translation binary
-  seek $fd $iOffset
-  puts -nonewline $fd $zAppend
+  #]
+  #set iOffset [expr (([file size testA.db-journal] + 511)/512)*512]
+  #set fd [open testA.db-journal a+]
+  #fconfigure $fd -encoding binary -translation binary
+  #seek $fd $iOffset
+  #puts -nonewline $fd $zAppend
# Also, fix the first journal-header in the journal-file. Because the
# journal file has not yet been synced, the 8-byte magic string at the
# start of the first journal-header has not been written by SQLite.
# So write it now.
-  seek $fd 0
-  puts -nonewline $fd "\xd9\xd5\x05\xf9\x20\xa1\x63\xd7"
-  close $fd
+  #seek $fd 0
+  #puts -nonewline $fd "\xd9\xd5\x05\xf9\x20\xa1\x63\xd7"
+  #close $fd
# Open a handle on testA.db and use it to query the database. At one
# point the first query would attempt a hot rollback, attempt to open
@@ -127,6 +130,8 @@
# be opened. This is incorrect, it should simply delete the journal
# file and proceed with the query.
#
+# NOTE: These tests don't work with Berkeley DB.
+if
do_test shared6-1.2.2
